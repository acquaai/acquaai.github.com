{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/even/source/favicon.ico","path":"favicon.ico","modified":0,"renderable":1},{"_id":"themes/even/source/robots.txt","path":"robots.txt","modified":0,"renderable":1},{"_id":"themes/even/source/css/style.scss","path":"css/style.scss","modified":0,"renderable":1},{"_id":"themes/even/source/fonts/chancery/apple-chancery-webfont.eot","path":"fonts/chancery/apple-chancery-webfont.eot","modified":0,"renderable":1},{"_id":"themes/even/source/fonts/chancery/apple-chancery-webfont.ttf","path":"fonts/chancery/apple-chancery-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/even/source/fonts/chancery/apple-chancery-webfont.woff","path":"fonts/chancery/apple-chancery-webfont.woff","modified":0,"renderable":1},{"_id":"themes/even/source/fonts/chancery/apple-chancery-webfont.woff2","path":"fonts/chancery/apple-chancery-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/even/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/even/source/js/src/even.js","path":"js/src/even.js","modified":0,"renderable":1},{"_id":"themes/even/source/lib/fancybox/blank.gif","path":"lib/fancybox/blank.gif","modified":0,"renderable":1},{"_id":"themes/even/source/lib/fancybox/fancybox_loading.gif","path":"lib/fancybox/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/even/source/lib/fancybox/fancybox_loading@2x.gif","path":"lib/fancybox/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/even/source/lib/fancybox/fancybox_overlay.png","path":"lib/fancybox/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/even/source/lib/fancybox/fancybox_sprite.png","path":"lib/fancybox/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/even/source/lib/fancybox/fancybox_sprite@2x.png","path":"lib/fancybox/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/even/source/lib/fancybox/jquery.fancybox.css","path":"lib/fancybox/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/even/source/lib/fancybox/jquery.fancybox.js","path":"lib/fancybox/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/even/source/lib/fancybox/jquery.fancybox.pack.js","path":"lib/fancybox/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/even/source/lib/slideout/slideout.js","path":"lib/slideout/slideout.js","modified":0,"renderable":1},{"_id":"themes/even/source/lib/slideout/slideout.min.js","path":"lib/slideout/slideout.min.js","modified":0,"renderable":1},{"_id":"themes/even/source/fonts/chancery/apple-chancery-webfont.svg","path":"fonts/chancery/apple-chancery-webfont.svg","modified":0,"renderable":1},{"_id":"themes/even/source/image/reward/alipay.png","path":"image/reward/alipay.png","modified":0,"renderable":1},{"_id":"themes/even/source/lib/jquery/jquery-3.1.1.min.js","path":"lib/jquery/jquery-3.1.1.min.js","modified":0,"renderable":1},{"_id":"themes/even/source/image/reward/wechat.png","path":"image/reward/wechat.png","modified":0,"renderable":1},{"_id":"themes/even/source/lib/fancybox/helpers/fancybox_buttons.png","path":"lib/fancybox/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/even/source/lib/fancybox/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/even/source/lib/fancybox/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/even/source/lib/fancybox/helpers/jquery.fancybox-media.js","path":"lib/fancybox/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/even/source/lib/fancybox/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/even/source/lib/fancybox/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1}],"Cache":[{"_id":"source/.DS_Store","hash":"0c867a58f3ad168754535f0be7cc43434572d6e7","modified":1509456609308},{"_id":"themes/even/.eslintrc","hash":"af17814aa6d4f488f9c09a727652a7efc1552c03","modified":1509455708744},{"_id":"themes/even/.gitignore","hash":"1d54f4b6fe44e61eae3d29e95de4b2618a6619aa","modified":1509455708744},{"_id":"themes/even/LICENSE","hash":"6fd796a4c624297885ceed920ac7130a96f29a85","modified":1509455708745},{"_id":"themes/even/README.md","hash":"51326a62d9f2aa2173bcfd755c168fe0dcb45f33","modified":1509455708745},{"_id":"themes/even/_config.yml","hash":"a11dc73ff1ae9582a335e2f4568ceefbcd7c0d1e","modified":1509456168254},{"_id":"themes/even/package.json","hash":"b79fd7b6910bfe44e5a28247f0c0903c8957273e","modified":1509455708756},{"_id":"source/_posts/SQLAdvisor.md","hash":"c524e8038408e8e5a78ca5469117913b25c17e87","modified":1509203102689},{"_id":"source/_posts/Use-Hexo-between-multiple-computers.md","hash":"910d452d6590d13be24e90b8638090fc967e0e18","modified":1509117214258},{"_id":"source/_posts/hello-world.md","hash":"11ce14739d9e6a9d2590babde74b06439ec57453","modified":1509455967096},{"_id":"source/_posts/ntpd-vs-ntpdate.md","hash":"a9363cb516499675cd3c4548d754063c220e1aab","modified":1509200252715},{"_id":"source/about/index.md","hash":"e9716ac07867056042314b8917248899a8d59c0d","modified":1509026693612},{"_id":"source/categories/index.md","hash":"9e472af93855432d9b51cc2f63454b0656be8688","modified":1509019441192},{"_id":"themes/even/languages/default.yml","hash":"3f3d4f2657525c4a0660257df944a1936e703609","modified":1509455708745},{"_id":"themes/even/languages/en.yml","hash":"563b1e018a7aff5e5369093cdffc57f8e3f47a29","modified":1509455708746},{"_id":"themes/even/languages/zh-cn.yml","hash":"f7da3fc6252df9d19abd1321b3c5a8c2ad13cca7","modified":1509455708746},{"_id":"themes/even/layout/_layout.swig","hash":"f688ecdf78f9699907599fe899012fb5e29a9f29","modified":1509455708746},{"_id":"themes/even/layout/archive.swig","hash":"52a91a52d34556c77815cd03bd7d5b9fd66b04ce","modified":1509455708754},{"_id":"themes/even/layout/index.swig","hash":"f3341b5f4af1eab0930a1d078b3022bbe0a59232","modified":1509455708755},{"_id":"themes/even/layout/categories.swig","hash":"21987803e162bd9383502d9de07d5d531b78cb53","modified":1509455708755},{"_id":"themes/even/layout/page.swig","hash":"3cade69477ab4ec34aac9e9dbf1b8cd0485a87a9","modified":1509455708755},{"_id":"themes/even/layout/post.swig","hash":"367b204579f8b9612399693a803c224925399a87","modified":1509455708755},{"_id":"themes/even/layout/tags.swig","hash":"c4d4cb9a3bcd05368d93fff107141899370933df","modified":1509455708756},{"_id":"themes/even/source/favicon.ico","hash":"0505cec3b99707df7a681de37177b3cf7950cc5d","modified":1509455708767},{"_id":"themes/even/source/robots.txt","hash":"eed1ebad39b24e7942fcaf8f27da7487eb9f956e","modified":1509455708780},{"_id":"themes/even/layout/_macro/archive.swig","hash":"96541615b4818dcfbb19e93d89fe85abebf37d4f","modified":1509455708747},{"_id":"themes/even/layout/_macro/post.swig","hash":"694ad34d0a476f6fabc6dc0c19328215b6a52f3b","modified":1509455708747},{"_id":"themes/even/layout/_partial/comments.swig","hash":"33208d7253c8a64fc6737a217d79d996698ff200","modified":1509455708749},{"_id":"themes/even/layout/_partial/footer.swig","hash":"2fc41d0b6a58ffeb7692a5f938697812f674ae29","modified":1509455708749},{"_id":"themes/even/layout/_partial/head.swig","hash":"bcb5f63dbac6c36dee9166ff6ff75d30b2d70edd","modified":1509455708749},{"_id":"themes/even/layout/_partial/header.swig","hash":"49c1cabfe8d4692b1743ca19f6296334e7d4781a","modified":1509455708749},{"_id":"themes/even/layout/_partial/pagination.swig","hash":"3843e523b9a7a1c5973d0c2de05cc88467733e09","modified":1509455708749},{"_id":"themes/even/layout/_partial/slideout.swig","hash":"0c2a10d97f8beedaaa23fbf98c5c4ff267213014","modified":1509455708750},{"_id":"themes/even/layout/_script/analytics.swig","hash":"24ba4a8adcaf09c9ede76405ee732385595d8e39","modified":1509455708751},{"_id":"themes/even/layout/_script/comments.swig","hash":"9e2b101a2fd313a1f0a5d2f5333eb173c6ef62f5","modified":1509455708752},{"_id":"themes/even/layout/_script/counter.swig","hash":"016ee9a2aeac6f957c8e4ed421394c9a57d389ed","modified":1509455708752},{"_id":"themes/even/layout/_script/libs.swig","hash":"67940ae28766608a3d6f287ecc95fa05db49f243","modified":1509455708754},{"_id":"themes/even/layout/_script/push.swig","hash":"2aacb350e2e4870f175ba4783c710c4c4006274c","modified":1509455708754},{"_id":"themes/even/layout/_script/theme.swig","hash":"cb81a0a6a6d5264cc6451dda3dd3a96101f89b1d","modified":1509455708754},{"_id":"themes/even/source/css/_base.scss","hash":"d03265b755abb63f8189750b20321c6aef7b7d7d","modified":1509455708756},{"_id":"themes/even/source/css/_variables.scss","hash":"b2f58e1116c0c931af33bc8e780a8522811965fc","modified":1509455708766},{"_id":"themes/even/source/css/style.scss","hash":"2905302c5d55abc3587527789edefd9f35395f5a","modified":1509455708766},{"_id":"source/_posts/.Archive/hello-world.md/2017-10-30 23-20-49.md","hash":"efa58c83bf58841aa7bd0a31541ae71c73d87cd0","modified":1509376849784},{"_id":"source/_posts/.Archive/hello-world.md/2017-10-30 23-28-19.md","hash":"5fe0b0e763534343ba6403e548fd7b38b0153f14","modified":1509377299519},{"_id":"source/_posts/.Archive/hello-world.md/2017-10-30 23-39-59.md","hash":"e34a33f866e307418a372037fd39d0f74e91f967","modified":1509377999545},{"_id":"source/_posts/.Archive/hello-world.md/2017-10-30 23-51-59.md","hash":"5cae1ca1b48ab7b9d62d26c6d26cab981b041e29","modified":1509378719569},{"_id":"source/_posts/.Archive/hello-world.md/2017-10-31 00-12-29.md","hash":"c3b873f7ccce4ee15efefb43016241e83965fcf2","modified":1509379949614},{"_id":"source/_posts/.Archive/hello-world.md/2017-10-31 00-13-29.md","hash":"2997432a6b583063110ce2bf10e87e1fbe14187c","modified":1509380009616},{"_id":"source/_posts/.Archive/hello-world.md/2017-10-31 00-18-54.md","hash":"f3d6a673a78fa85d21d3352868474bed6f287e77","modified":1509380334760},{"_id":"source/_posts/.Archive/hello-world.md/2017-10-31 00-22-39.md","hash":"72bd3ed7c7e81dabbfa1d76014802d95c012c932","modified":1509380559631},{"_id":"source/_posts/.Archive/hello-world.md/2017-10-31 00-25-19.md","hash":"c692a921835013aa0fbbaba95f03571d1c3cff01","modified":1509380719636},{"_id":"source/_posts/.Archive/hello-world.md/2017-10-31 20-43-38.md","hash":"a2a9834242be90afe11b7a9c8e66db8e353482ee","modified":1509453818650},{"_id":"source/_posts/.Archive/hello-world.md/2017-10-31 20-49-58.md","hash":"aa1dd4902a76556f69e39455aaf6ebd0a0476efd","modified":1509454198627},{"_id":"source/_posts/.Archive/hello-world.md/2017-10-31 21-13-08.md","hash":"4d3ea458b4bcd0d7147d419e790948f7f4ebadf8","modified":1509455588724},{"_id":"source/_posts/.Archive/hello-world.md/2017-10-31 21-16-58.md","hash":"2d8bf9d904468250a63bb01793515d5c21e7ee1d","modified":1509455818719},{"_id":"source/_posts/.Archive/hello-world.md/2017-10-31 21-19-18.md","hash":"35eaef8896a05f08ebeef08a3de2134809d5101e","modified":1509455958718},{"_id":"source/about/.Archive/index.md/2017-10-25 20-31-40.md","hash":"b0ee889263d80d109f7541cda609d1c302b1c82d","modified":1508934700092},{"_id":"source/about/.Archive/index.md/2017-10-25 20-33-40.md","hash":"6d2a3e2d3a4eeddcd8d279ab12a5812d9250c8ca","modified":1508934820073},{"_id":"source/about/.Archive/index.md/2017-10-25 20-35-10.md","hash":"9f1a51f155e96fcd621f8b92166990e9a299b7aa","modified":1508934910074},{"_id":"themes/even/layout/_partial/_footer/social.swig","hash":"65368d0a5108fecc072eaea3b1fb04c597941729","modified":1509455708747},{"_id":"themes/even/layout/_partial/_head/meta.swig","hash":"0b3ce980cc48cce232527637084fc223cdcbf3d1","modified":1509455708747},{"_id":"themes/even/layout/_partial/_post/copyright.swig","hash":"53bce8c943e32874d65a840325e6fe0da22331f3","modified":1509455708748},{"_id":"themes/even/layout/_partial/_post/reward.swig","hash":"faf64b5461970fda72863e9779f3f024cb493658","modified":1509455708748},{"_id":"themes/even/layout/_partial/_post/toc.swig","hash":"fc21e5b9ebaca219678d85b8c5e4b3ee013fca25","modified":1509455708748},{"_id":"themes/even/layout/_script/_analytics/baidu-analytics.swig","hash":"ce7c137b4a90a0a87d770a5c8cabd0849cd477ac","modified":1509455708750},{"_id":"themes/even/layout/_script/_analytics/google-analytics.swig","hash":"2036a339fa2afd7669d30e5d51863e567b3e70a4","modified":1509455708750},{"_id":"themes/even/layout/_script/_comments/changyan.swig","hash":"caa7633fd47b103055b5a3b338830cc2a03bc1af","modified":1509455708751},{"_id":"themes/even/layout/_script/_comments/disqus.swig","hash":"0502145777d65515249680d3e4611f249e3d9ff8","modified":1509455708751},{"_id":"themes/even/source/css/_common/_animation.scss","hash":"f32d2444f0ab4dcb8b811ae1bccae6073f21a988","modified":1509455708757},{"_id":"themes/even/source/css/_common/_normalize.scss","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1509455708757},{"_id":"themes/even/source/css/_common/_utils.scss","hash":"9ec5b1f6cf47260eba2729ff4931111b808644f0","modified":1509455708757},{"_id":"themes/even/source/css/_custom/_custom.scss","hash":"d0873cd8554d515282a6792fcc3f5bd4a256b7a6","modified":1509455708757},{"_id":"themes/even/source/css/_partial/_archive.scss","hash":"a32395e4efebb2284159f1bd32ee603162463930","modified":1509455708758},{"_id":"themes/even/source/css/_partial/_back-to-top.scss","hash":"c6f586ac04a9a0f3633dadf5c66be9e0c4027f1d","modified":1509455708758},{"_id":"themes/even/source/css/_partial/_categories.scss","hash":"96f47000d25ef4e0e948f8f43fa4e2983ff0d746","modified":1509455708758},{"_id":"themes/even/source/css/_partial/_footer.scss","hash":"76f3a72440be8aa1e93d8ddc5ea958777d1545ab","modified":1509455708759},{"_id":"themes/even/source/css/_partial/_header.scss","hash":"4a3e92feef33bed0021f1a65a801c24ee7d5946f","modified":1509455708759},{"_id":"themes/even/source/css/_partial/_iconfont.scss","hash":"ab9f12b6bdf37e93c509205bddb4b6bad3d95d5d","modified":1509455708760},{"_id":"themes/even/source/css/_partial/_mobile.scss","hash":"0d1c60bd92f8e5db01e7843934251152ec4d6d44","modified":1509455708760},{"_id":"themes/even/source/css/_partial/_pagination.scss","hash":"b24db39534e180ebcebba2e81d91d9f1d534eea1","modified":1509455708761},{"_id":"themes/even/source/css/_partial/_post.scss","hash":"7d03216b1fb5007ecc33412cacab74432c4e02d2","modified":1509455708761},{"_id":"themes/even/source/css/_partial/_slideout.scss","hash":"e4820a42698f647a824575b234835b9ce4ac4797","modified":1509455708766},{"_id":"themes/even/source/css/_partial/_tags.scss","hash":"fb4bf54b34291d5b72598a7ba4d3e370c8ad9383","modified":1509455708766},{"_id":"themes/even/source/fonts/chancery/apple-chancery-webfont.eot","hash":"fef78bd502f74fdbf0316123e176454cb3eb4e50","modified":1509455708767},{"_id":"themes/even/source/fonts/chancery/apple-chancery-webfont.ttf","hash":"5e25c531901d8a9e37ab45a7f4acdbe5324b51b6","modified":1509455708769},{"_id":"themes/even/source/fonts/chancery/apple-chancery-webfont.woff","hash":"95beafe485d4bdbddfecbcf3b2bc9b2d9cf5f5c5","modified":1509455708769},{"_id":"themes/even/source/fonts/chancery/apple-chancery-webfont.woff2","hash":"afd0f74128f1c21c5a542b2e100870e74da663b6","modified":1509455708769},{"_id":"themes/even/source/js/src/bootstrap.js","hash":"2dc29f58ec930bdcd32e882825d724a41f7f39f9","modified":1509455708773},{"_id":"themes/even/source/js/src/even.js","hash":"e1c1c579604fd4ef36c9d5ce596d2cda0bcd3b62","modified":1509455708773},{"_id":"themes/even/source/lib/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1509455708773},{"_id":"themes/even/source/lib/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1509455708774},{"_id":"themes/even/source/lib/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1509455708774},{"_id":"themes/even/source/lib/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1509455708774},{"_id":"themes/even/source/lib/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1509455708774},{"_id":"themes/even/source/lib/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1509455708775},{"_id":"themes/even/source/lib/fancybox/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1509455708777},{"_id":"themes/even/source/lib/fancybox/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1509455708777},{"_id":"themes/even/source/lib/fancybox/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1509455708778},{"_id":"themes/even/source/lib/slideout/slideout.js","hash":"81ec76a63f6f4bbdfc801d822182ab8afa9068fe","modified":1509455708779},{"_id":"themes/even/source/lib/slideout/slideout.min.js","hash":"7166ed307b771398a593fc3d4f1c5d93fbbe19bb","modified":1509455708779},{"_id":"themes/even/source/fonts/chancery/apple-chancery-webfont.svg","hash":"a94e508f306a742637653f98c6e8827b11d3c142","modified":1509455708768},{"_id":"themes/even/source/image/reward/alipay.png","hash":"75e0f7d3f804f5ed5f6978ffdc6522224df1b701","modified":1509455708771},{"_id":"themes/even/source/lib/jquery/jquery-3.1.1.min.js","hash":"f647a6d37dc4ca055ced3cf64bbc1f490070acba","modified":1509455708778},{"_id":"themes/even/source/css/_partial/_footer/_copyright.scss","hash":"afbc0f90c674e5cd5fd7509eb1296d60b999d4e1","modified":1509455708759},{"_id":"themes/even/source/css/_partial/_footer/_social.scss","hash":"bca6a1036951c2475278bfbd3a5ce51ff861e9a3","modified":1509455708759},{"_id":"themes/even/source/css/_partial/_header/_logo.scss","hash":"109073dde15146d835bf06faa2f256d1ac658315","modified":1509455708760},{"_id":"themes/even/source/css/_partial/_header/_menu.scss","hash":"454214ab2b5a0ca17d6872068c52bfd01ac02fdc","modified":1509455708760},{"_id":"themes/even/source/css/_partial/_post/_code.scss","hash":"cff6c1a599a4bb7c55b502ea09849c1286483644","modified":1509455708762},{"_id":"themes/even/source/css/_partial/_post/_content.scss","hash":"8c7a0bc2c79a038e01c02b044c3c59e9cd8ed69f","modified":1509455708763},{"_id":"themes/even/source/css/_partial/_post/_copyright.scss","hash":"71d949b053b0176621fdba5dc1e2e740f60b467d","modified":1509455708763},{"_id":"themes/even/source/css/_partial/_post/_footer.scss","hash":"9f2ab0ac20b2a8bfd315febd387c399f72f43d10","modified":1509455708763},{"_id":"themes/even/source/css/_partial/_post/_header.scss","hash":"6e65913214af7f4bb4c8a50ccd494b5b50ea8595","modified":1509455708764},{"_id":"themes/even/source/css/_partial/_post/_reward.scss","hash":"66ec9faa27ed879dc9a2ca59c73ed6bfd5e61dcd","modified":1509455708764},{"_id":"themes/even/source/css/_partial/_post/_toc.scss","hash":"5806ce8d5c4e2d70e12e03ab48327bdebc68c67b","modified":1509455708765},{"_id":"themes/even/source/image/reward/wechat.png","hash":"f9904f25b35fa9d38e221ef7089787d24ee8b02b","modified":1509455708772},{"_id":"themes/even/source/lib/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1509455708775},{"_id":"themes/even/source/lib/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1509455708775},{"_id":"themes/even/source/lib/fancybox/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1509455708776},{"_id":"themes/even/source/lib/fancybox/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1509455708776},{"_id":"themes/even/source/lib/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1509455708776},{"_id":"themes/even/source/lib/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1509455708776},{"_id":"public/atom.xml","hash":"48d7a6687b8b8793bcbf8883f0eb83b791d510a4","modified":1509457038326},{"_id":"public/about/index.html","hash":"a51118e0adaaa50dfcf7fff7497a25767cdddfc6","modified":1509457038343},{"_id":"public/categories/index.html","hash":"0bd9514bd94d08ab222d16a15a070975ead26028","modified":1509457038343},{"_id":"public/2017/10/28/SQLAdvisor/index.html","hash":"b1d1e4c2570711ff30b0d68ffde8788e59cd6d18","modified":1509457038344},{"_id":"public/2017/10/27/Use-Hexo-between-multiple-computers/index.html","hash":"60d64a8760b259917e1a3bdbb7fa858c7fdf3957","modified":1509457038344},{"_id":"public/archives/index.html","hash":"799c2b61931fff0f97d0127cc16f78f532996e63","modified":1509457038344},{"_id":"public/archives/2017/index.html","hash":"94ef64412c0fb37b7c4ffc031af3e9328e19763d","modified":1509457038344},{"_id":"public/archives/2017/10/index.html","hash":"73bfd0e75e9ed3190e83444a2e6ae570203388b1","modified":1509457038344},{"_id":"public/categories/MySQL/index.html","hash":"aa98e6e0b0f98e9bdd3fc1fdd754b665125e67d8","modified":1509457038344},{"_id":"public/categories/Hexo/index.html","hash":"58c4851d98e53f45782edf1c94c67adf3bcf8c33","modified":1509457038344},{"_id":"public/categories/DevOps/index.html","hash":"dfd362d3c983a26fa72e1fe7b86b1fd49ae125d6","modified":1509457038344},{"_id":"public/2017/10/28/ntpd-vs-ntpdate/index.html","hash":"e1dc98c1162ad4b53d62e77d5805563259203e8a","modified":1509457038344},{"_id":"public/2017/10/24/hello-world/index.html","hash":"b3a30d523ef30ffc6f45d991a25a1360ffd91937","modified":1509457038344},{"_id":"public/index.html","hash":"f7d0e6a6de7be612b0b7f2f7d146cd5940ab51c9","modified":1509457038344},{"_id":"public/favicon.ico","hash":"0505cec3b99707df7a681de37177b3cf7950cc5d","modified":1509457038350},{"_id":"public/robots.txt","hash":"eed1ebad39b24e7942fcaf8f27da7487eb9f956e","modified":1509457038350},{"_id":"public/fonts/chancery/apple-chancery-webfont.eot","hash":"fef78bd502f74fdbf0316123e176454cb3eb4e50","modified":1509457038350},{"_id":"public/fonts/chancery/apple-chancery-webfont.ttf","hash":"5e25c531901d8a9e37ab45a7f4acdbe5324b51b6","modified":1509457038350},{"_id":"public/fonts/chancery/apple-chancery-webfont.woff","hash":"95beafe485d4bdbddfecbcf3b2bc9b2d9cf5f5c5","modified":1509457038350},{"_id":"public/fonts/chancery/apple-chancery-webfont.woff2","hash":"afd0f74128f1c21c5a542b2e100870e74da663b6","modified":1509457038350},{"_id":"public/lib/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1509457038350},{"_id":"public/lib/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1509457038350},{"_id":"public/lib/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1509457038350},{"_id":"public/lib/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1509457038351},{"_id":"public/lib/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1509457038351},{"_id":"public/lib/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1509457038351},{"_id":"public/lib/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1509457038351},{"_id":"public/image/reward/alipay.png","hash":"75e0f7d3f804f5ed5f6978ffdc6522224df1b701","modified":1509457038367},{"_id":"public/fonts/chancery/apple-chancery-webfont.svg","hash":"a94e508f306a742637653f98c6e8827b11d3c142","modified":1509457038369},{"_id":"public/js/src/bootstrap.js","hash":"2dc29f58ec930bdcd32e882825d724a41f7f39f9","modified":1509457038391},{"_id":"public/js/src/even.js","hash":"e1c1c579604fd4ef36c9d5ce596d2cda0bcd3b62","modified":1509457038391},{"_id":"public/lib/fancybox/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1509457038391},{"_id":"public/lib/slideout/slideout.min.js","hash":"7166ed307b771398a593fc3d4f1c5d93fbbe19bb","modified":1509457038391},{"_id":"public/lib/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1509457038391},{"_id":"public/lib/fancybox/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1509457038391},{"_id":"public/lib/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1509457038391},{"_id":"public/lib/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1509457038391},{"_id":"public/lib/fancybox/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1509457038391},{"_id":"public/lib/fancybox/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1509457038392},{"_id":"public/lib/fancybox/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1509457038392},{"_id":"public/lib/slideout/slideout.js","hash":"81ec76a63f6f4bbdfc801d822182ab8afa9068fe","modified":1509457038392},{"_id":"public/lib/jquery/jquery-3.1.1.min.js","hash":"f647a6d37dc4ca055ced3cf64bbc1f490070acba","modified":1509457038392},{"_id":"public/image/reward/wechat.png","hash":"f9904f25b35fa9d38e221ef7089787d24ee8b02b","modified":1509457038392},{"_id":"public/css/style.css","hash":"5adccc3fc5c405f50a9e613263bc74ab1d8354cc","modified":1509457038529}],"Category":[{"name":"MySQL","_id":"cj9fnqwcf000496skt57smj17"},{"name":"Hexo","_id":"cj9fnqwcq000796sksu7f148p"},{"name":"DevOps","_id":"cj9fnqwcu000a96skyqv4yn19"}],"Data":[],"Page":[{"title":"about","date":"2017-10-24T15:13:30.000Z","layout":"page","comments":0,"_content":"**Acqua**, the meaning is water in Italian. I love **OpenSource** Technologies, now focus on **MySQL** **Redis** **DevOps** and **Machine Learning**.\n## Stale skills\n- ORACLE 9i/10g Administrator Certified Professional\n- IBM Certified Implementation Specialist\n + Planning for High Availability: PowerHA/PowerVM\n + Systems Storage Solutions\n + Data Backup & Disaster Recovery Solutions\t\n- FalconStor CDP Certified Professional\n- VMware Business Continuity & Disaster Recovery Solutions\n","source":"about/index.md","raw":"---\ntitle: about\ndate: 2017-10-24 23:13:30\nlayout: page\ncomments: false\n---\n**Acqua**, the meaning is water in Italian. I love **OpenSource** Technologies, now focus on **MySQL** **Redis** **DevOps** and **Machine Learning**.\n## Stale skills\n- ORACLE 9i/10g Administrator Certified Professional\n- IBM Certified Implementation Specialist\n + Planning for High Availability: PowerHA/PowerVM\n + Systems Storage Solutions\n + Data Backup & Disaster Recovery Solutions\t\n- FalconStor CDP Certified Professional\n- VMware Business Continuity & Disaster Recovery Solutions\n","updated":"2017-10-26T14:04:53.612Z","path":"about/index.html","_id":"cj9fnqwc1000196sku3gwnvg5","content":"<p><strong>Acqua</strong>, the meaning is water in Italian. I love <strong>OpenSource</strong> Technologies, now focus on <strong>MySQL</strong> <strong>Redis</strong> <strong>DevOps</strong> and <strong>Machine Learning</strong>.</p>\n<h2 id=\"Stale-skills\"><a href=\"#Stale-skills\" class=\"headerlink\" title=\"Stale skills\"></a>Stale skills</h2><ul>\n<li>ORACLE 9i/10g Administrator Certified Professional</li>\n<li>IBM Certified Implementation Specialist<ul>\n<li>Planning for High Availability: PowerHA/PowerVM</li>\n<li>Systems Storage Solutions</li>\n<li>Data Backup &amp; Disaster Recovery Solutions    </li>\n</ul>\n</li>\n<li>FalconStor CDP Certified Professional</li>\n<li>VMware Business Continuity &amp; Disaster Recovery Solutions</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<p><strong>Acqua</strong>, the meaning is water in Italian. I love <strong>OpenSource</strong> Technologies, now focus on <strong>MySQL</strong> <strong>Redis</strong> <strong>DevOps</strong> and <strong>Machine Learning</strong>.</p>\n<h2 id=\"Stale-skills\"><a href=\"#Stale-skills\" class=\"headerlink\" title=\"Stale skills\"></a>Stale skills</h2><ul>\n<li>ORACLE 9i/10g Administrator Certified Professional</li>\n<li>IBM Certified Implementation Specialist<ul>\n<li>Planning for High Availability: PowerHA/PowerVM</li>\n<li>Systems Storage Solutions</li>\n<li>Data Backup &amp; Disaster Recovery Solutions    </li>\n</ul>\n</li>\n<li>FalconStor CDP Certified Professional</li>\n<li>VMware Business Continuity &amp; Disaster Recovery Solutions</li>\n</ul>\n"},{"title":"categories","date":"2017-10-24T16:33:05.000Z","layout":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2017-10-25 00:33:05\nlayout: categories\ncomments: false\n---\n","updated":"2017-10-26T12:04:01.192Z","path":"categories/index.html","_id":"cj9fnqwc9000396ske7jc3qs0","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"SQLAdvisor","date":"2017-10-28T11:21:38.000Z","comments":0,"_content":"> 感谢美团点评DBA团队开源了[SQLAdvisor](https://github.com/meituan-dianping/sqladvisor)。SQLAdvisor是基于MySQL原生态词法解析，结合分析SQL中的where条件、聚合条件、多表Join关系给出索引优化建议的调优工具。\n\n## 安装SQLAdvisor\n### Clone源代码\n``` bash\n$ git clone https://github.com/meituan-dianping/sqladvisor.git\n```\n\n### 安装依赖包\n``` bash\n$ sudo yum install cmake libaio-devel libffi-devel glib2 glib2-devel\n$ sduo yum install Percona-Server-shared-56\n```\n<!-- more -->\n\n>**注意**\n+ 可能需要配置percona56的yum源：\n$ sudo yum install http://www.percona.com/downloads/percona-release/redhat/0.1-3/percona-release-0.1-3.noarch.rpm\n+ 编译sqladvisor时依赖perconaserverclient_r, 因此需要安装Percona-Server-shared-56。可能需要配置软链接：\n$ cd /usr/lib64/\n$ sudo ln -sf libperconaserverclient_r.so.18 libperconaserverclient_r.so\n+ 跟据glib安装的路径，修改**sqladvisor/sqladvisor/CMakeLists.txt**文件中两处include_directories针对**glib**设置的路径。\n...\ninclude_directories(\"/usr/lib64/glib-2.0/include\")\ninclude_directories(\"/usr/include/glib-2.0\")\n...\n\n### 编译sqlparser\n``` bash\n$ sudo cmake -DBUILD_CONFIG=mysql_release -DCMAKE_BUILD_TYPE=debug -DCMAKE_INSTALL_PREFIX=/usr/local/sqlparser ./\n$ sudo make\n$ sudo make install\n```\n>**注意**\n+ DCMAKE_INSTALL_PREFIX为sqlparser库文件和头文件的安装目录，其中lib目录包含库文件libsqlparser.so，include目录包含所需的所有头文件。\n+ DCMAKE_INSTALL_PREFIX值尽量不要修改，后面安装依赖这个目录。\n\n### 安装SQLAdvisor源码\n``` bash\n$ cd /root/sqladvisor/sqladvisor\n$ sudo cmake -DCMAKE_BUILD_TYPE=debug ./\n$ sudo make\n安装成功后会在本路径生成sqladvisor的可执行文件。\n```\n\n## 使用SQLAdvisor\n### 查看命令用法\n``` bash\n$ ./sqladvisor --help\n```\n### 单SQL语句优化\n``` bash\n$ ./sqladvisor -h 127.0.0.1 -P 3306 -u root -p 'password' -d mysql -q \"select * from user\" -v 1\n2017-10-28 15:45:13 2045 [Note] 第1步: 对SQL解析优化之后得到的SQL:select `*` AS `*` from `mysql`.`user` \n2017-10-28 15:45:13 2045 [Note] 第2步：表user 的SQL太逆天,没有优化建议 \n2017-10-28 15:45:13 2045 [Note] 第3步: SQLAdvisor结束! \n```\n\n### 多SQL语句优化\n+ 将多条SQL语句定义在一个文件中\n``` bash\n$ cat sqls.cnf\n[sqladvisor]\nusername=root\npassword=password\nhost=127.0.0.1\nport=3306\ndbname=mysql\nsqls=select * from user ; select * from engine_cost ; select * from server_cost\n```\n\n+ 执行定义文件\n``` bash\n$ ./sqladvisor -f sqls.cnf -v 1\n2017-10-28 15:57:03 2102 [Note] 第1步: 对SQL解析优化之后得到的SQL:select `*` AS `*` from `mysql`.`user` \n2017-10-28 15:57:03 2102 [Note] 第2步：表user 的SQL太逆天,没有优化建议 \n2017-10-28 15:57:03 2102 [Note] 第3步: SQLAdvisor结束! \n\n2017-10-28 15:57:03 2102 [Note] 第1步: 对SQL解析优化之后得到的SQL:select `*` AS `*` from `mysql`.`engine_cost` \n2017-10-28 15:57:03 2102 [Note] 第2步：表engine_cost 的SQL太逆天,没有优化建议 \n2017-10-28 15:57:03 2102 [Note] 第3步: SQLAdvisor结束! \n\n2017-10-28 15:57:03 2102 [Note] 第1步: 对SQL解析优化之后得到的SQL:select `*` AS `*` from `mysql`.`server_cost` \n2017-10-28 15:57:03 2102 [Note] 第2步：表server_cost 的SQL太逆天,没有优化建议 \n2017-10-28 15:57:03 2102 [Note] 第3步: SQLAdvisor结束! \n```\n","source":"_posts/SQLAdvisor.md","raw":"---\ntitle: SQLAdvisor\ndate: 2017-10-28 19:21:38\ncategories: MySQL\ncomments: false\n---\n> 感谢美团点评DBA团队开源了[SQLAdvisor](https://github.com/meituan-dianping/sqladvisor)。SQLAdvisor是基于MySQL原生态词法解析，结合分析SQL中的where条件、聚合条件、多表Join关系给出索引优化建议的调优工具。\n\n## 安装SQLAdvisor\n### Clone源代码\n``` bash\n$ git clone https://github.com/meituan-dianping/sqladvisor.git\n```\n\n### 安装依赖包\n``` bash\n$ sudo yum install cmake libaio-devel libffi-devel glib2 glib2-devel\n$ sduo yum install Percona-Server-shared-56\n```\n<!-- more -->\n\n>**注意**\n+ 可能需要配置percona56的yum源：\n$ sudo yum install http://www.percona.com/downloads/percona-release/redhat/0.1-3/percona-release-0.1-3.noarch.rpm\n+ 编译sqladvisor时依赖perconaserverclient_r, 因此需要安装Percona-Server-shared-56。可能需要配置软链接：\n$ cd /usr/lib64/\n$ sudo ln -sf libperconaserverclient_r.so.18 libperconaserverclient_r.so\n+ 跟据glib安装的路径，修改**sqladvisor/sqladvisor/CMakeLists.txt**文件中两处include_directories针对**glib**设置的路径。\n...\ninclude_directories(\"/usr/lib64/glib-2.0/include\")\ninclude_directories(\"/usr/include/glib-2.0\")\n...\n\n### 编译sqlparser\n``` bash\n$ sudo cmake -DBUILD_CONFIG=mysql_release -DCMAKE_BUILD_TYPE=debug -DCMAKE_INSTALL_PREFIX=/usr/local/sqlparser ./\n$ sudo make\n$ sudo make install\n```\n>**注意**\n+ DCMAKE_INSTALL_PREFIX为sqlparser库文件和头文件的安装目录，其中lib目录包含库文件libsqlparser.so，include目录包含所需的所有头文件。\n+ DCMAKE_INSTALL_PREFIX值尽量不要修改，后面安装依赖这个目录。\n\n### 安装SQLAdvisor源码\n``` bash\n$ cd /root/sqladvisor/sqladvisor\n$ sudo cmake -DCMAKE_BUILD_TYPE=debug ./\n$ sudo make\n安装成功后会在本路径生成sqladvisor的可执行文件。\n```\n\n## 使用SQLAdvisor\n### 查看命令用法\n``` bash\n$ ./sqladvisor --help\n```\n### 单SQL语句优化\n``` bash\n$ ./sqladvisor -h 127.0.0.1 -P 3306 -u root -p 'password' -d mysql -q \"select * from user\" -v 1\n2017-10-28 15:45:13 2045 [Note] 第1步: 对SQL解析优化之后得到的SQL:select `*` AS `*` from `mysql`.`user` \n2017-10-28 15:45:13 2045 [Note] 第2步：表user 的SQL太逆天,没有优化建议 \n2017-10-28 15:45:13 2045 [Note] 第3步: SQLAdvisor结束! \n```\n\n### 多SQL语句优化\n+ 将多条SQL语句定义在一个文件中\n``` bash\n$ cat sqls.cnf\n[sqladvisor]\nusername=root\npassword=password\nhost=127.0.0.1\nport=3306\ndbname=mysql\nsqls=select * from user ; select * from engine_cost ; select * from server_cost\n```\n\n+ 执行定义文件\n``` bash\n$ ./sqladvisor -f sqls.cnf -v 1\n2017-10-28 15:57:03 2102 [Note] 第1步: 对SQL解析优化之后得到的SQL:select `*` AS `*` from `mysql`.`user` \n2017-10-28 15:57:03 2102 [Note] 第2步：表user 的SQL太逆天,没有优化建议 \n2017-10-28 15:57:03 2102 [Note] 第3步: SQLAdvisor结束! \n\n2017-10-28 15:57:03 2102 [Note] 第1步: 对SQL解析优化之后得到的SQL:select `*` AS `*` from `mysql`.`engine_cost` \n2017-10-28 15:57:03 2102 [Note] 第2步：表engine_cost 的SQL太逆天,没有优化建议 \n2017-10-28 15:57:03 2102 [Note] 第3步: SQLAdvisor结束! \n\n2017-10-28 15:57:03 2102 [Note] 第1步: 对SQL解析优化之后得到的SQL:select `*` AS `*` from `mysql`.`server_cost` \n2017-10-28 15:57:03 2102 [Note] 第2步：表server_cost 的SQL太逆天,没有优化建议 \n2017-10-28 15:57:03 2102 [Note] 第3步: SQLAdvisor结束! \n```\n","slug":"SQLAdvisor","published":1,"updated":"2017-10-28T15:05:02.689Z","layout":"post","photos":[],"link":"","_id":"cj9fnqwbw000096skileld217","content":"<blockquote>\n<p>感谢美团点评DBA团队开源了<a href=\"https://github.com/meituan-dianping/sqladvisor\" target=\"_blank\" rel=\"external\">SQLAdvisor</a>。SQLAdvisor是基于MySQL原生态词法解析，结合分析SQL中的where条件、聚合条件、多表Join关系给出索引优化建议的调优工具。</p>\n</blockquote>\n<h2 id=\"安装SQLAdvisor\"><a href=\"#安装SQLAdvisor\" class=\"headerlink\" title=\"安装SQLAdvisor\"></a>安装SQLAdvisor</h2><h3 id=\"Clone源代码\"><a href=\"#Clone源代码\" class=\"headerlink\" title=\"Clone源代码\"></a>Clone源代码</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ git <span class=\"built_in\">clone</span> https://github.com/meituan-dianping/sqladvisor.git</div></pre></td></tr></table></figure>\n<h3 id=\"安装依赖包\"><a href=\"#安装依赖包\" class=\"headerlink\" title=\"安装依赖包\"></a>安装依赖包</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ sudo yum install cmake libaio-devel libffi-devel glib2 glib2-devel</div><div class=\"line\">$ sduo yum install Percona-Server-shared-56</div></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<blockquote>\n<p><strong>注意</strong></p>\n<ul>\n<li>可能需要配置percona56的yum源：<br>$ sudo yum install <a href=\"http://www.percona.com/downloads/percona-release/redhat/0.1-3/percona-release-0.1-3.noarch.rpm\" target=\"_blank\" rel=\"external\">http://www.percona.com/downloads/percona-release/redhat/0.1-3/percona-release-0.1-3.noarch.rpm</a></li>\n<li>编译sqladvisor时依赖perconaserverclient_r, 因此需要安装Percona-Server-shared-56。可能需要配置软链接：<br>$ cd /usr/lib64/<br>$ sudo ln -sf libperconaserverclient_r.so.18 libperconaserverclient_r.so</li>\n<li>跟据glib安装的路径，修改<strong>sqladvisor/sqladvisor/CMakeLists.txt</strong>文件中两处include_directories针对<strong>glib</strong>设置的路径。<br>…<br>include_directories(“/usr/lib64/glib-2.0/include”)<br>include_directories(“/usr/include/glib-2.0”)<br>…</li>\n</ul>\n</blockquote>\n<h3 id=\"编译sqlparser\"><a href=\"#编译sqlparser\" class=\"headerlink\" title=\"编译sqlparser\"></a>编译sqlparser</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ sudo cmake -DBUILD_CONFIG=mysql_release -DCMAKE_BUILD_TYPE=debug -DCMAKE_INSTALL_PREFIX=/usr/<span class=\"built_in\">local</span>/sqlparser ./</div><div class=\"line\">$ sudo make</div><div class=\"line\">$ sudo make install</div></pre></td></tr></table></figure>\n<blockquote>\n<p><strong>注意</strong></p>\n<ul>\n<li>DCMAKE_INSTALL_PREFIX为sqlparser库文件和头文件的安装目录，其中lib目录包含库文件libsqlparser.so，include目录包含所需的所有头文件。</li>\n<li>DCMAKE_INSTALL_PREFIX值尽量不要修改，后面安装依赖这个目录。</li>\n</ul>\n</blockquote>\n<h3 id=\"安装SQLAdvisor源码\"><a href=\"#安装SQLAdvisor源码\" class=\"headerlink\" title=\"安装SQLAdvisor源码\"></a>安装SQLAdvisor源码</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ <span class=\"built_in\">cd</span> /root/sqladvisor/sqladvisor</div><div class=\"line\">$ sudo cmake -DCMAKE_BUILD_TYPE=debug ./</div><div class=\"line\">$ sudo make</div><div class=\"line\">安装成功后会在本路径生成sqladvisor的可执行文件。</div></pre></td></tr></table></figure>\n<h2 id=\"使用SQLAdvisor\"><a href=\"#使用SQLAdvisor\" class=\"headerlink\" title=\"使用SQLAdvisor\"></a>使用SQLAdvisor</h2><h3 id=\"查看命令用法\"><a href=\"#查看命令用法\" class=\"headerlink\" title=\"查看命令用法\"></a>查看命令用法</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ ./sqladvisor --<span class=\"built_in\">help</span></div></pre></td></tr></table></figure>\n<h3 id=\"单SQL语句优化\"><a href=\"#单SQL语句优化\" class=\"headerlink\" title=\"单SQL语句优化\"></a>单SQL语句优化</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ ./sqladvisor -h 127.0.0.1 -P 3306 -u root -p <span class=\"string\">'password'</span> -d mysql -q <span class=\"string\">\"select * from user\"</span> -v 1</div><div class=\"line\">2017-10-28 15:45:13 2045 [Note] 第1步: 对SQL解析优化之后得到的SQL:select `*` AS `*` from `mysql`.`user` </div><div class=\"line\">2017-10-28 15:45:13 2045 [Note] 第2步：表user 的SQL太逆天,没有优化建议 </div><div class=\"line\">2017-10-28 15:45:13 2045 [Note] 第3步: SQLAdvisor结束!</div></pre></td></tr></table></figure>\n<h3 id=\"多SQL语句优化\"><a href=\"#多SQL语句优化\" class=\"headerlink\" title=\"多SQL语句优化\"></a>多SQL语句优化</h3><ul>\n<li><p>将多条SQL语句定义在一个文件中</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ cat sqls.cnf</div><div class=\"line\">[sqladvisor]</div><div class=\"line\">username=root</div><div class=\"line\">password=password</div><div class=\"line\">host=127.0.0.1</div><div class=\"line\">port=3306</div><div class=\"line\">dbname=mysql</div><div class=\"line\">sqls=select * from user ; select * from engine_cost ; select * from server_cost</div></pre></td></tr></table></figure>\n</li>\n<li><p>执行定义文件</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ ./sqladvisor -f sqls.cnf -v 1</div><div class=\"line\">2017-10-28 15:57:03 2102 [Note] 第1步: 对SQL解析优化之后得到的SQL:select `*` AS `*` from `mysql`.`user` </div><div class=\"line\">2017-10-28 15:57:03 2102 [Note] 第2步：表user 的SQL太逆天,没有优化建议 </div><div class=\"line\">2017-10-28 15:57:03 2102 [Note] 第3步: SQLAdvisor结束! </div><div class=\"line\"></div><div class=\"line\">2017-10-28 15:57:03 2102 [Note] 第1步: 对SQL解析优化之后得到的SQL:select `*` AS `*` from `mysql`.`engine_cost` </div><div class=\"line\">2017-10-28 15:57:03 2102 [Note] 第2步：表engine_cost 的SQL太逆天,没有优化建议 </div><div class=\"line\">2017-10-28 15:57:03 2102 [Note] 第3步: SQLAdvisor结束! </div><div class=\"line\"></div><div class=\"line\">2017-10-28 15:57:03 2102 [Note] 第1步: 对SQL解析优化之后得到的SQL:select `*` AS `*` from `mysql`.`server_cost` </div><div class=\"line\">2017-10-28 15:57:03 2102 [Note] 第2步：表server_cost 的SQL太逆天,没有优化建议 </div><div class=\"line\">2017-10-28 15:57:03 2102 [Note] 第3步: SQLAdvisor结束!</div></pre></td></tr></table></figure>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"<blockquote>\n<p>感谢美团点评DBA团队开源了<a href=\"https://github.com/meituan-dianping/sqladvisor\" target=\"_blank\" rel=\"external\">SQLAdvisor</a>。SQLAdvisor是基于MySQL原生态词法解析，结合分析SQL中的where条件、聚合条件、多表Join关系给出索引优化建议的调优工具。</p>\n</blockquote>\n<h2 id=\"安装SQLAdvisor\"><a href=\"#安装SQLAdvisor\" class=\"headerlink\" title=\"安装SQLAdvisor\"></a>安装SQLAdvisor</h2><h3 id=\"Clone源代码\"><a href=\"#Clone源代码\" class=\"headerlink\" title=\"Clone源代码\"></a>Clone源代码</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ git <span class=\"built_in\">clone</span> https://github.com/meituan-dianping/sqladvisor.git</div></pre></td></tr></table></figure>\n<h3 id=\"安装依赖包\"><a href=\"#安装依赖包\" class=\"headerlink\" title=\"安装依赖包\"></a>安装依赖包</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ sudo yum install cmake libaio-devel libffi-devel glib2 glib2-devel</div><div class=\"line\">$ sduo yum install Percona-Server-shared-56</div></pre></td></tr></table></figure>","more":"<blockquote>\n<p><strong>注意</strong></p>\n<ul>\n<li>可能需要配置percona56的yum源：<br>$ sudo yum install <a href=\"http://www.percona.com/downloads/percona-release/redhat/0.1-3/percona-release-0.1-3.noarch.rpm\" target=\"_blank\" rel=\"external\">http://www.percona.com/downloads/percona-release/redhat/0.1-3/percona-release-0.1-3.noarch.rpm</a></li>\n<li>编译sqladvisor时依赖perconaserverclient_r, 因此需要安装Percona-Server-shared-56。可能需要配置软链接：<br>$ cd /usr/lib64/<br>$ sudo ln -sf libperconaserverclient_r.so.18 libperconaserverclient_r.so</li>\n<li>跟据glib安装的路径，修改<strong>sqladvisor/sqladvisor/CMakeLists.txt</strong>文件中两处include_directories针对<strong>glib</strong>设置的路径。<br>…<br>include_directories(“/usr/lib64/glib-2.0/include”)<br>include_directories(“/usr/include/glib-2.0”)<br>…</li>\n</ul>\n</blockquote>\n<h3 id=\"编译sqlparser\"><a href=\"#编译sqlparser\" class=\"headerlink\" title=\"编译sqlparser\"></a>编译sqlparser</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ sudo cmake -DBUILD_CONFIG=mysql_release -DCMAKE_BUILD_TYPE=debug -DCMAKE_INSTALL_PREFIX=/usr/<span class=\"built_in\">local</span>/sqlparser ./</div><div class=\"line\">$ sudo make</div><div class=\"line\">$ sudo make install</div></pre></td></tr></table></figure>\n<blockquote>\n<p><strong>注意</strong></p>\n<ul>\n<li>DCMAKE_INSTALL_PREFIX为sqlparser库文件和头文件的安装目录，其中lib目录包含库文件libsqlparser.so，include目录包含所需的所有头文件。</li>\n<li>DCMAKE_INSTALL_PREFIX值尽量不要修改，后面安装依赖这个目录。</li>\n</ul>\n</blockquote>\n<h3 id=\"安装SQLAdvisor源码\"><a href=\"#安装SQLAdvisor源码\" class=\"headerlink\" title=\"安装SQLAdvisor源码\"></a>安装SQLAdvisor源码</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ <span class=\"built_in\">cd</span> /root/sqladvisor/sqladvisor</div><div class=\"line\">$ sudo cmake -DCMAKE_BUILD_TYPE=debug ./</div><div class=\"line\">$ sudo make</div><div class=\"line\">安装成功后会在本路径生成sqladvisor的可执行文件。</div></pre></td></tr></table></figure>\n<h2 id=\"使用SQLAdvisor\"><a href=\"#使用SQLAdvisor\" class=\"headerlink\" title=\"使用SQLAdvisor\"></a>使用SQLAdvisor</h2><h3 id=\"查看命令用法\"><a href=\"#查看命令用法\" class=\"headerlink\" title=\"查看命令用法\"></a>查看命令用法</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ ./sqladvisor --<span class=\"built_in\">help</span></div></pre></td></tr></table></figure>\n<h3 id=\"单SQL语句优化\"><a href=\"#单SQL语句优化\" class=\"headerlink\" title=\"单SQL语句优化\"></a>单SQL语句优化</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ ./sqladvisor -h 127.0.0.1 -P 3306 -u root -p <span class=\"string\">'password'</span> -d mysql -q <span class=\"string\">\"select * from user\"</span> -v 1</div><div class=\"line\">2017-10-28 15:45:13 2045 [Note] 第1步: 对SQL解析优化之后得到的SQL:select `*` AS `*` from `mysql`.`user` </div><div class=\"line\">2017-10-28 15:45:13 2045 [Note] 第2步：表user 的SQL太逆天,没有优化建议 </div><div class=\"line\">2017-10-28 15:45:13 2045 [Note] 第3步: SQLAdvisor结束!</div></pre></td></tr></table></figure>\n<h3 id=\"多SQL语句优化\"><a href=\"#多SQL语句优化\" class=\"headerlink\" title=\"多SQL语句优化\"></a>多SQL语句优化</h3><ul>\n<li><p>将多条SQL语句定义在一个文件中</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ cat sqls.cnf</div><div class=\"line\">[sqladvisor]</div><div class=\"line\">username=root</div><div class=\"line\">password=password</div><div class=\"line\">host=127.0.0.1</div><div class=\"line\">port=3306</div><div class=\"line\">dbname=mysql</div><div class=\"line\">sqls=select * from user ; select * from engine_cost ; select * from server_cost</div></pre></td></tr></table></figure>\n</li>\n<li><p>执行定义文件</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ ./sqladvisor -f sqls.cnf -v 1</div><div class=\"line\">2017-10-28 15:57:03 2102 [Note] 第1步: 对SQL解析优化之后得到的SQL:select `*` AS `*` from `mysql`.`user` </div><div class=\"line\">2017-10-28 15:57:03 2102 [Note] 第2步：表user 的SQL太逆天,没有优化建议 </div><div class=\"line\">2017-10-28 15:57:03 2102 [Note] 第3步: SQLAdvisor结束! </div><div class=\"line\"></div><div class=\"line\">2017-10-28 15:57:03 2102 [Note] 第1步: 对SQL解析优化之后得到的SQL:select `*` AS `*` from `mysql`.`engine_cost` </div><div class=\"line\">2017-10-28 15:57:03 2102 [Note] 第2步：表engine_cost 的SQL太逆天,没有优化建议 </div><div class=\"line\">2017-10-28 15:57:03 2102 [Note] 第3步: SQLAdvisor结束! </div><div class=\"line\"></div><div class=\"line\">2017-10-28 15:57:03 2102 [Note] 第1步: 对SQL解析优化之后得到的SQL:select `*` AS `*` from `mysql`.`server_cost` </div><div class=\"line\">2017-10-28 15:57:03 2102 [Note] 第2步：表server_cost 的SQL太逆天,没有优化建议 </div><div class=\"line\">2017-10-28 15:57:03 2102 [Note] 第3步: SQLAdvisor结束!</div></pre></td></tr></table></figure>\n</li>\n</ul>"},{"title":"Use Hexo between multiple computers","date":"2017-10-27T14:51:49.000Z","comments":0,"_content":"## 方法\n> 利用github的branch功能可以在不同电脑上写博客。master分支默认存放hexo生成的静态文件，hexo分支存放hexo源代码，在新电脑上，只需要clone hexo分支即可。hexo分支并不需要存放所有的源文件，**node_modules**目录是npm install命令生成的，**public**目录是hexo g命令生成，**.deploy_git**目录是hexo d命令生成的，可以在**.gitignore**文件中把这三个目录忽略提交。\n\n## 原电脑操作\n### 新建hexo分支并切换\n``` bash\ngit checkout -b hexo\nSwitched to a new branch 'hexo'\ngit checkout命令加上-b参数表示创建并切换，相当于：\ngit branch hexo\ngit checkout hexo\nSwitched to branch 'hexo'\n```\n\n<!-- more -->\n\n### 编辑.gitignore文件\n``` bash\n➜  acquaai.github.com cat .gitignore\n.DS_Store\nThumbs.db\ndb.json\n*.log\nnode_modules/\npublic/\n.deploy*/%\n```\n\n","source":"_posts/Use-Hexo-between-multiple-computers.md","raw":"---\ntitle: Use Hexo between multiple computers\ndate: 2017-10-27 22:51:49\ncategories: Hexo\ncomments: false\n---\n## 方法\n> 利用github的branch功能可以在不同电脑上写博客。master分支默认存放hexo生成的静态文件，hexo分支存放hexo源代码，在新电脑上，只需要clone hexo分支即可。hexo分支并不需要存放所有的源文件，**node_modules**目录是npm install命令生成的，**public**目录是hexo g命令生成，**.deploy_git**目录是hexo d命令生成的，可以在**.gitignore**文件中把这三个目录忽略提交。\n\n## 原电脑操作\n### 新建hexo分支并切换\n``` bash\ngit checkout -b hexo\nSwitched to a new branch 'hexo'\ngit checkout命令加上-b参数表示创建并切换，相当于：\ngit branch hexo\ngit checkout hexo\nSwitched to branch 'hexo'\n```\n\n<!-- more -->\n\n### 编辑.gitignore文件\n``` bash\n➜  acquaai.github.com cat .gitignore\n.DS_Store\nThumbs.db\ndb.json\n*.log\nnode_modules/\npublic/\n.deploy*/%\n```\n\n","slug":"Use-Hexo-between-multiple-computers","published":1,"updated":"2017-10-27T15:13:34.258Z","layout":"post","photos":[],"link":"","_id":"cj9fnqwc4000296skxlt44hou","content":"<h2 id=\"方法\"><a href=\"#方法\" class=\"headerlink\" title=\"方法\"></a>方法</h2><blockquote>\n<p>利用github的branch功能可以在不同电脑上写博客。master分支默认存放hexo生成的静态文件，hexo分支存放hexo源代码，在新电脑上，只需要clone hexo分支即可。hexo分支并不需要存放所有的源文件，<strong>node_modules</strong>目录是npm install命令生成的，<strong>public</strong>目录是hexo g命令生成，<strong>.deploy_git</strong>目录是hexo d命令生成的，可以在<strong>.gitignore</strong>文件中把这三个目录忽略提交。</p>\n</blockquote>\n<h2 id=\"原电脑操作\"><a href=\"#原电脑操作\" class=\"headerlink\" title=\"原电脑操作\"></a>原电脑操作</h2><h3 id=\"新建hexo分支并切换\"><a href=\"#新建hexo分支并切换\" class=\"headerlink\" title=\"新建hexo分支并切换\"></a>新建hexo分支并切换</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">git checkout -b hexo</div><div class=\"line\">Switched to a new branch <span class=\"string\">'hexo'</span></div><div class=\"line\">git checkout命令加上-b参数表示创建并切换，相当于：</div><div class=\"line\">git branch hexo</div><div class=\"line\">git checkout hexo</div><div class=\"line\">Switched to branch <span class=\"string\">'hexo'</span></div></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<h3 id=\"编辑-gitignore文件\"><a href=\"#编辑-gitignore文件\" class=\"headerlink\" title=\"编辑.gitignore文件\"></a>编辑.gitignore文件</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">➜  acquaai.github.com cat .gitignore</div><div class=\"line\">.DS_Store</div><div class=\"line\">Thumbs.db</div><div class=\"line\">db.json</div><div class=\"line\">*.<span class=\"built_in\">log</span></div><div class=\"line\">node_modules/</div><div class=\"line\">public/</div><div class=\"line\">.deploy*/%</div></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<h2 id=\"方法\"><a href=\"#方法\" class=\"headerlink\" title=\"方法\"></a>方法</h2><blockquote>\n<p>利用github的branch功能可以在不同电脑上写博客。master分支默认存放hexo生成的静态文件，hexo分支存放hexo源代码，在新电脑上，只需要clone hexo分支即可。hexo分支并不需要存放所有的源文件，<strong>node_modules</strong>目录是npm install命令生成的，<strong>public</strong>目录是hexo g命令生成，<strong>.deploy_git</strong>目录是hexo d命令生成的，可以在<strong>.gitignore</strong>文件中把这三个目录忽略提交。</p>\n</blockquote>\n<h2 id=\"原电脑操作\"><a href=\"#原电脑操作\" class=\"headerlink\" title=\"原电脑操作\"></a>原电脑操作</h2><h3 id=\"新建hexo分支并切换\"><a href=\"#新建hexo分支并切换\" class=\"headerlink\" title=\"新建hexo分支并切换\"></a>新建hexo分支并切换</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">git checkout -b hexo</div><div class=\"line\">Switched to a new branch <span class=\"string\">'hexo'</span></div><div class=\"line\">git checkout命令加上-b参数表示创建并切换，相当于：</div><div class=\"line\">git branch hexo</div><div class=\"line\">git checkout hexo</div><div class=\"line\">Switched to branch <span class=\"string\">'hexo'</span></div></pre></td></tr></table></figure>","more":"<h3 id=\"编辑-gitignore文件\"><a href=\"#编辑-gitignore文件\" class=\"headerlink\" title=\"编辑.gitignore文件\"></a>编辑.gitignore文件</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">➜  acquaai.github.com cat .gitignore</div><div class=\"line\">.DS_Store</div><div class=\"line\">Thumbs.db</div><div class=\"line\">db.json</div><div class=\"line\">*.<span class=\"built_in\">log</span></div><div class=\"line\">node_modules/</div><div class=\"line\">public/</div><div class=\"line\">.deploy*/%</div></pre></td></tr></table></figure>"},{"title":"Hello World","date":"2017-10-24T15:45:01.000Z","comments":0,"_content":">7年前使用[WordPress](https://wordpress.com)记录了学习Oracle、IBM的不少文章，后来慢慢变懒了，再后来就只有一个.sql文件静静躺在移动硬盘里。为了加深对知识的理解，\nso，keep moving forward!\n\n## 配置git\n``` bash\n➜  ~ git config --global user.name \"username\"\n➜  ~ git config --global user.email \"username@users.noreply.github.com\"\n➜  ~ ssh-keygen -t rsa -b 4096 -C \"your_email@example.com\"\n➜  ~ ssh-agent -s\n➜  ~ ssh-add ~/.ssh/id_rsa\n➜  ~ pbcopy < ~/.ssh/id_rsa.pub\n在GitHub \"Settings\"左侧菜单中选择\"SSH and GPG keys\"，再选择右上角的\"New SSH Key\"，粘贴key。\n测试：\n➜  ~ ssh -T git@github.com\n```\n## GitHub上创建仓库\n``` bash\n➜  ~ git clone https://github.com/acquaai/acquaai.github.com.git\n➜  ~ cd acquaai.github.com\n➜  acquaai.github.com git:(master) git add .\n➜  acquaai.github.com git:(master) git commit -m \"first commit\"\nOn branch master\nYour branch is up-to-date with 'origin/master'.\nnothing to commit, working tree clean\n➜  acquaai.github.com git:(master) git push origin master\nEverything up-to-date\n➜  acquaai.github.com git:(master) git checkout -b hexo\nSwitched to a new branch 'hexo'\n➜  acquaai.github.com git:(hexo) git branch -a\n* hexo\n  master\n  remotes/origin/HEAD -> origin/master\n  remotes/origin/master\n  \n  ➜  acquaai.github.com git:(hexo) git add .\n➜  acquaai.github.com git:(hexo) git commit -m \"hexo first commit\"\nOn branch hexo\nnothing to commit, working tree clean\n➜  acquaai.github.com git:(hexo) git push origin hexo\nTotal 0 (delta 0), reused 0 (delta 0)\nTo https://github.com/acquaai/acquaai.github.com.git\n * [new branch]      hexo -> hexo\n```\n## 设置默认分支hexo\n## 安装nvm\n``` bash\n➜  ~ curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.36.6/install.sh | bash\nor\n➜  ~ wget -qO- https://raw.githubusercontent.com/creationix/nvm/v0.33.6/install.sh | bash\n```\n### 配置环境变量\nnvm默认安装在~/.nvm，自动在shell配置文件（oh-my-zsh -> ~/.zshrc）尾增加如下内容：\n``` bash\n➜  ~ cat .zshrc\n...\nexport NVM_DIR=\"$HOME/.nvm\"\n[ -s \"$NVM_DIR/nvm.sh\" ] && \\. \"$NVM_DIR/nvm.sh\"  # This loads nvm\n[ -s \"$NVM_DIR/bash_completion\" ] && \\. \"$NVM_DIR/bash_completion\"  # This loads nvm bash_completion\n```\n<!-- more -->\n\n### 查看nvm信息\n``` bash\n➜  ~ source ~/.zshrc\n➜  ~ nvm --version\n```\n\n## 安装Node\n``` bash\n➜  ~ nvm ls-remote         #查看Node的版本信息\n➜  ~ nvm install v6.11.4\n```\n如果身在墙内，可以使用国内镜像资源\n``` bash\n➜  ~ NVM_NODEJS_ORG_MIRROR=https://npm.taobao.org/mirrors/node nvm install 6 \n```\n\n\n## 安装hexo\n``` bash\n➜  ~ cd acquaai.github.com\n➜  acquaai.github.com sudo npm install hexo-cli -g\n```\n### 部署网站\n``` bash\n➜  acquaai.github.com hexo init  #初始化时要求目录为空，init完成后再CP回来\n➜  acquaai.github.com npm install\n```\n### 生成静态页面\n``` bash\n➜  acquaai.github.com hexo clean\n➜  acquaai.github.com hexo g\t#generate\n```\n### 运行hexo\n``` bash\n➜  acquaai.github.com hexo s\t#server\nlocalhost:4000\t#在浏览器中查看效果\n```\n## 安装发布插件\n``` bash\n➜  acquaai.github.com git:(hexo) npm install hexo-deployer-git --save\n```\n### 网站发布\n``` bash\n➜  acquaai.github.com git:(hexo) ✗ vi _config.yml\n\n# Deployment\n## Docs: https://hexo.io/docs/deployment.html\ndeploy:\n  type: git\n  repo: https://github.com/acquaai/acquaai.github.com\n  branch: [master]\n\n➜  acquaai.github.com hexo d\t#deploy\n\n```\n## 安装主题\n```bash\n➜  acquaai.github.com git:(hexo) ✗ npm install hexo-renderer-scss --save    #安装主题插件\n➜  acquaai.github.com git:(hexo) ✗ git clone https://github.com/ahonn/hexo-theme-even themes/even\n➜  acquaai.github.com git:(hexo) ✗ vi _config.yml\t#修改网站配置文件theme\n\n# Extensions\n## Plugins: https://hexo.io/plugins/\n## Themes: https://hexo.io/themes/\ntheme: even\n```\n如果需要配置RSS，安装插件：\n``` bash\n➜  acquaai.github.com git:(hexo) ✗ npm install hexo-generator-feed --save\n注意：此插件使用命令python2，推荐定义别名alias python2=\"python\"\n```\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\ndate: 2017-10-24 23:45:01\ncategories: Hexo\ncomments: false\n---\n>7年前使用[WordPress](https://wordpress.com)记录了学习Oracle、IBM的不少文章，后来慢慢变懒了，再后来就只有一个.sql文件静静躺在移动硬盘里。为了加深对知识的理解，\nso，keep moving forward!\n\n## 配置git\n``` bash\n➜  ~ git config --global user.name \"username\"\n➜  ~ git config --global user.email \"username@users.noreply.github.com\"\n➜  ~ ssh-keygen -t rsa -b 4096 -C \"your_email@example.com\"\n➜  ~ ssh-agent -s\n➜  ~ ssh-add ~/.ssh/id_rsa\n➜  ~ pbcopy < ~/.ssh/id_rsa.pub\n在GitHub \"Settings\"左侧菜单中选择\"SSH and GPG keys\"，再选择右上角的\"New SSH Key\"，粘贴key。\n测试：\n➜  ~ ssh -T git@github.com\n```\n## GitHub上创建仓库\n``` bash\n➜  ~ git clone https://github.com/acquaai/acquaai.github.com.git\n➜  ~ cd acquaai.github.com\n➜  acquaai.github.com git:(master) git add .\n➜  acquaai.github.com git:(master) git commit -m \"first commit\"\nOn branch master\nYour branch is up-to-date with 'origin/master'.\nnothing to commit, working tree clean\n➜  acquaai.github.com git:(master) git push origin master\nEverything up-to-date\n➜  acquaai.github.com git:(master) git checkout -b hexo\nSwitched to a new branch 'hexo'\n➜  acquaai.github.com git:(hexo) git branch -a\n* hexo\n  master\n  remotes/origin/HEAD -> origin/master\n  remotes/origin/master\n  \n  ➜  acquaai.github.com git:(hexo) git add .\n➜  acquaai.github.com git:(hexo) git commit -m \"hexo first commit\"\nOn branch hexo\nnothing to commit, working tree clean\n➜  acquaai.github.com git:(hexo) git push origin hexo\nTotal 0 (delta 0), reused 0 (delta 0)\nTo https://github.com/acquaai/acquaai.github.com.git\n * [new branch]      hexo -> hexo\n```\n## 设置默认分支hexo\n## 安装nvm\n``` bash\n➜  ~ curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.36.6/install.sh | bash\nor\n➜  ~ wget -qO- https://raw.githubusercontent.com/creationix/nvm/v0.33.6/install.sh | bash\n```\n### 配置环境变量\nnvm默认安装在~/.nvm，自动在shell配置文件（oh-my-zsh -> ~/.zshrc）尾增加如下内容：\n``` bash\n➜  ~ cat .zshrc\n...\nexport NVM_DIR=\"$HOME/.nvm\"\n[ -s \"$NVM_DIR/nvm.sh\" ] && \\. \"$NVM_DIR/nvm.sh\"  # This loads nvm\n[ -s \"$NVM_DIR/bash_completion\" ] && \\. \"$NVM_DIR/bash_completion\"  # This loads nvm bash_completion\n```\n<!-- more -->\n\n### 查看nvm信息\n``` bash\n➜  ~ source ~/.zshrc\n➜  ~ nvm --version\n```\n\n## 安装Node\n``` bash\n➜  ~ nvm ls-remote         #查看Node的版本信息\n➜  ~ nvm install v6.11.4\n```\n如果身在墙内，可以使用国内镜像资源\n``` bash\n➜  ~ NVM_NODEJS_ORG_MIRROR=https://npm.taobao.org/mirrors/node nvm install 6 \n```\n\n\n## 安装hexo\n``` bash\n➜  ~ cd acquaai.github.com\n➜  acquaai.github.com sudo npm install hexo-cli -g\n```\n### 部署网站\n``` bash\n➜  acquaai.github.com hexo init  #初始化时要求目录为空，init完成后再CP回来\n➜  acquaai.github.com npm install\n```\n### 生成静态页面\n``` bash\n➜  acquaai.github.com hexo clean\n➜  acquaai.github.com hexo g\t#generate\n```\n### 运行hexo\n``` bash\n➜  acquaai.github.com hexo s\t#server\nlocalhost:4000\t#在浏览器中查看效果\n```\n## 安装发布插件\n``` bash\n➜  acquaai.github.com git:(hexo) npm install hexo-deployer-git --save\n```\n### 网站发布\n``` bash\n➜  acquaai.github.com git:(hexo) ✗ vi _config.yml\n\n# Deployment\n## Docs: https://hexo.io/docs/deployment.html\ndeploy:\n  type: git\n  repo: https://github.com/acquaai/acquaai.github.com\n  branch: [master]\n\n➜  acquaai.github.com hexo d\t#deploy\n\n```\n## 安装主题\n```bash\n➜  acquaai.github.com git:(hexo) ✗ npm install hexo-renderer-scss --save    #安装主题插件\n➜  acquaai.github.com git:(hexo) ✗ git clone https://github.com/ahonn/hexo-theme-even themes/even\n➜  acquaai.github.com git:(hexo) ✗ vi _config.yml\t#修改网站配置文件theme\n\n# Extensions\n## Plugins: https://hexo.io/plugins/\n## Themes: https://hexo.io/themes/\ntheme: even\n```\n如果需要配置RSS，安装插件：\n``` bash\n➜  acquaai.github.com git:(hexo) ✗ npm install hexo-generator-feed --save\n注意：此插件使用命令python2，推荐定义别名alias python2=\"python\"\n```\n","slug":"hello-world","published":1,"updated":"2017-10-31T13:19:27.096Z","layout":"post","photos":[],"link":"","_id":"cj9fnqwci000596sk8f9skd9s","content":"<blockquote>\n<p>7年前使用<a href=\"https://wordpress.com\" target=\"_blank\" rel=\"external\">WordPress</a>记录了学习Oracle、IBM的不少文章，后来慢慢变懒了，再后来就只有一个.sql文件静静躺在移动硬盘里。为了加深对知识的理解，<br>so，keep moving forward!</p>\n</blockquote>\n<h2 id=\"配置git\"><a href=\"#配置git\" class=\"headerlink\" title=\"配置git\"></a>配置git</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">➜  ~ git config --global user.name <span class=\"string\">\"username\"</span></div><div class=\"line\">➜  ~ git config --global user.email <span class=\"string\">\"username@users.noreply.github.com\"</span></div><div class=\"line\">➜  ~ ssh-keygen -t rsa -b 4096 -C <span class=\"string\">\"your_email@example.com\"</span></div><div class=\"line\">➜  ~ ssh-agent -s</div><div class=\"line\">➜  ~ ssh-add ~/.ssh/id_rsa</div><div class=\"line\">➜  ~ pbcopy &lt; ~/.ssh/id_rsa.pub</div><div class=\"line\">在GitHub <span class=\"string\">\"Settings\"</span>左侧菜单中选择<span class=\"string\">\"SSH and GPG keys\"</span>，再选择右上角的<span class=\"string\">\"New SSH Key\"</span>，粘贴key。</div><div class=\"line\">测试：</div><div class=\"line\">➜  ~ ssh -T git@github.com</div></pre></td></tr></table></figure>\n<h2 id=\"GitHub上创建仓库\"><a href=\"#GitHub上创建仓库\" class=\"headerlink\" title=\"GitHub上创建仓库\"></a>GitHub上创建仓库</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div></pre></td><td class=\"code\"><pre><div class=\"line\">➜  ~ git <span class=\"built_in\">clone</span> https://github.com/acquaai/acquaai.github.com.git</div><div class=\"line\">➜  ~ <span class=\"built_in\">cd</span> acquaai.github.com</div><div class=\"line\">➜  acquaai.github.com git:(master) git add .</div><div class=\"line\">➜  acquaai.github.com git:(master) git commit -m <span class=\"string\">\"first commit\"</span></div><div class=\"line\">On branch master</div><div class=\"line\">Your branch is up-to-date with <span class=\"string\">'origin/master'</span>.</div><div class=\"line\">nothing to commit, working tree clean</div><div class=\"line\">➜  acquaai.github.com git:(master) git push origin master</div><div class=\"line\">Everything up-to-date</div><div class=\"line\">➜  acquaai.github.com git:(master) git checkout -b hexo</div><div class=\"line\">Switched to a new branch <span class=\"string\">'hexo'</span></div><div class=\"line\">➜  acquaai.github.com git:(hexo) git branch -a</div><div class=\"line\">* hexo</div><div class=\"line\">  master</div><div class=\"line\">  remotes/origin/HEAD -&gt; origin/master</div><div class=\"line\">  remotes/origin/master</div><div class=\"line\">  </div><div class=\"line\">  ➜  acquaai.github.com git:(hexo) git add .</div><div class=\"line\">➜  acquaai.github.com git:(hexo) git commit -m <span class=\"string\">\"hexo first commit\"</span></div><div class=\"line\">On branch hexo</div><div class=\"line\">nothing to commit, working tree clean</div><div class=\"line\">➜  acquaai.github.com git:(hexo) git push origin hexo</div><div class=\"line\">Total 0 (delta 0), reused 0 (delta 0)</div><div class=\"line\">To https://github.com/acquaai/acquaai.github.com.git</div><div class=\"line\"> * [new branch]      hexo -&gt; hexo</div></pre></td></tr></table></figure>\n<h2 id=\"设置默认分支hexo\"><a href=\"#设置默认分支hexo\" class=\"headerlink\" title=\"设置默认分支hexo\"></a>设置默认分支hexo</h2><h2 id=\"安装nvm\"><a href=\"#安装nvm\" class=\"headerlink\" title=\"安装nvm\"></a>安装nvm</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">➜  ~ curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.36.6/install.sh | bash</div><div class=\"line\">or</div><div class=\"line\">➜  ~ wget -qO- https://raw.githubusercontent.com/creationix/nvm/v0.33.6/install.sh | bash</div></pre></td></tr></table></figure>\n<h3 id=\"配置环境变量\"><a href=\"#配置环境变量\" class=\"headerlink\" title=\"配置环境变量\"></a>配置环境变量</h3><p>nvm默认安装在~/.nvm，自动在shell配置文件（oh-my-zsh -&gt; ~/.zshrc）尾增加如下内容：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">➜  ~ cat .zshrc</div><div class=\"line\">...</div><div class=\"line\"><span class=\"built_in\">export</span> NVM_DIR=<span class=\"string\">\"<span class=\"variable\">$HOME</span>/.nvm\"</span></div><div class=\"line\">[ -s <span class=\"string\">\"<span class=\"variable\">$NVM_DIR</span>/nvm.sh\"</span> ] &amp;&amp; \\. <span class=\"string\">\"<span class=\"variable\">$NVM_DIR</span>/nvm.sh\"</span>  <span class=\"comment\"># This loads nvm</span></div><div class=\"line\">[ -s <span class=\"string\">\"<span class=\"variable\">$NVM_DIR</span>/bash_completion\"</span> ] &amp;&amp; \\. <span class=\"string\">\"<span class=\"variable\">$NVM_DIR</span>/bash_completion\"</span>  <span class=\"comment\"># This loads nvm bash_completion</span></div></pre></td></tr></table></figure></p>\n<a id=\"more\"></a>\n<h3 id=\"查看nvm信息\"><a href=\"#查看nvm信息\" class=\"headerlink\" title=\"查看nvm信息\"></a>查看nvm信息</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">➜  ~ <span class=\"built_in\">source</span> ~/.zshrc</div><div class=\"line\">➜  ~ nvm --version</div></pre></td></tr></table></figure>\n<h2 id=\"安装Node\"><a href=\"#安装Node\" class=\"headerlink\" title=\"安装Node\"></a>安装Node</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">➜  ~ nvm ls-remote         <span class=\"comment\">#查看Node的版本信息</span></div><div class=\"line\">➜  ~ nvm install v6.11.4</div></pre></td></tr></table></figure>\n<p>如果身在墙内，可以使用国内镜像资源<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">➜  ~ NVM_NODEJS_ORG_MIRROR=https://npm.taobao.org/mirrors/node nvm install 6</div></pre></td></tr></table></figure></p>\n<h2 id=\"安装hexo\"><a href=\"#安装hexo\" class=\"headerlink\" title=\"安装hexo\"></a>安装hexo</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">➜  ~ <span class=\"built_in\">cd</span> acquaai.github.com</div><div class=\"line\">➜  acquaai.github.com sudo npm install hexo-cli -g</div></pre></td></tr></table></figure>\n<h3 id=\"部署网站\"><a href=\"#部署网站\" class=\"headerlink\" title=\"部署网站\"></a>部署网站</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">➜  acquaai.github.com hexo init  <span class=\"comment\">#初始化时要求目录为空，init完成后再CP回来</span></div><div class=\"line\">➜  acquaai.github.com npm install</div></pre></td></tr></table></figure>\n<h3 id=\"生成静态页面\"><a href=\"#生成静态页面\" class=\"headerlink\" title=\"生成静态页面\"></a>生成静态页面</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">➜  acquaai.github.com hexo clean</div><div class=\"line\">➜  acquaai.github.com hexo g\t<span class=\"comment\">#generate</span></div></pre></td></tr></table></figure>\n<h3 id=\"运行hexo\"><a href=\"#运行hexo\" class=\"headerlink\" title=\"运行hexo\"></a>运行hexo</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">➜  acquaai.github.com hexo s\t<span class=\"comment\">#server</span></div><div class=\"line\">localhost:4000\t<span class=\"comment\">#在浏览器中查看效果</span></div></pre></td></tr></table></figure>\n<h2 id=\"安装发布插件\"><a href=\"#安装发布插件\" class=\"headerlink\" title=\"安装发布插件\"></a>安装发布插件</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">➜  acquaai.github.com git:(hexo) npm install hexo-deployer-git --save</div></pre></td></tr></table></figure>\n<h3 id=\"网站发布\"><a href=\"#网站发布\" class=\"headerlink\" title=\"网站发布\"></a>网站发布</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">➜  acquaai.github.com git:(hexo) ✗ vi _config.yml</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Deployment</span></div><div class=\"line\"><span class=\"comment\">## Docs: https://hexo.io/docs/deployment.html</span></div><div class=\"line\">deploy:</div><div class=\"line\">  <span class=\"built_in\">type</span>: git</div><div class=\"line\">  repo: https://github.com/acquaai/acquaai.github.com</div><div class=\"line\">  branch: [master]</div><div class=\"line\"></div><div class=\"line\">➜  acquaai.github.com hexo d\t<span class=\"comment\">#deploy</span></div></pre></td></tr></table></figure>\n<h2 id=\"安装主题\"><a href=\"#安装主题\" class=\"headerlink\" title=\"安装主题\"></a>安装主题</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">➜  acquaai.github.com git:(hexo) ✗ npm install hexo-renderer-scss --save    <span class=\"comment\">#安装主题插件</span></div><div class=\"line\">➜  acquaai.github.com git:(hexo) ✗ git <span class=\"built_in\">clone</span> https://github.com/ahonn/hexo-theme-even themes/even</div><div class=\"line\">➜  acquaai.github.com git:(hexo) ✗ vi _config.yml\t<span class=\"comment\">#修改网站配置文件theme</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Extensions</span></div><div class=\"line\"><span class=\"comment\">## Plugins: https://hexo.io/plugins/</span></div><div class=\"line\"><span class=\"comment\">## Themes: https://hexo.io/themes/</span></div><div class=\"line\">theme: even</div></pre></td></tr></table></figure>\n<p>如果需要配置RSS，安装插件：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">➜  acquaai.github.com git:(hexo) ✗ npm install hexo-generator-feed --save</div><div class=\"line\">注意：此插件使用命令python2，推荐定义别名<span class=\"built_in\">alias</span> python2=<span class=\"string\">\"python\"</span></div></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"<blockquote>\n<p>7年前使用<a href=\"https://wordpress.com\" target=\"_blank\" rel=\"external\">WordPress</a>记录了学习Oracle、IBM的不少文章，后来慢慢变懒了，再后来就只有一个.sql文件静静躺在移动硬盘里。为了加深对知识的理解，<br>so，keep moving forward!</p>\n</blockquote>\n<h2 id=\"配置git\"><a href=\"#配置git\" class=\"headerlink\" title=\"配置git\"></a>配置git</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">➜  ~ git config --global user.name <span class=\"string\">\"username\"</span></div><div class=\"line\">➜  ~ git config --global user.email <span class=\"string\">\"username@users.noreply.github.com\"</span></div><div class=\"line\">➜  ~ ssh-keygen -t rsa -b 4096 -C <span class=\"string\">\"your_email@example.com\"</span></div><div class=\"line\">➜  ~ ssh-agent -s</div><div class=\"line\">➜  ~ ssh-add ~/.ssh/id_rsa</div><div class=\"line\">➜  ~ pbcopy &lt; ~/.ssh/id_rsa.pub</div><div class=\"line\">在GitHub <span class=\"string\">\"Settings\"</span>左侧菜单中选择<span class=\"string\">\"SSH and GPG keys\"</span>，再选择右上角的<span class=\"string\">\"New SSH Key\"</span>，粘贴key。</div><div class=\"line\">测试：</div><div class=\"line\">➜  ~ ssh -T git@github.com</div></pre></td></tr></table></figure>\n<h2 id=\"GitHub上创建仓库\"><a href=\"#GitHub上创建仓库\" class=\"headerlink\" title=\"GitHub上创建仓库\"></a>GitHub上创建仓库</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div></pre></td><td class=\"code\"><pre><div class=\"line\">➜  ~ git <span class=\"built_in\">clone</span> https://github.com/acquaai/acquaai.github.com.git</div><div class=\"line\">➜  ~ <span class=\"built_in\">cd</span> acquaai.github.com</div><div class=\"line\">➜  acquaai.github.com git:(master) git add .</div><div class=\"line\">➜  acquaai.github.com git:(master) git commit -m <span class=\"string\">\"first commit\"</span></div><div class=\"line\">On branch master</div><div class=\"line\">Your branch is up-to-date with <span class=\"string\">'origin/master'</span>.</div><div class=\"line\">nothing to commit, working tree clean</div><div class=\"line\">➜  acquaai.github.com git:(master) git push origin master</div><div class=\"line\">Everything up-to-date</div><div class=\"line\">➜  acquaai.github.com git:(master) git checkout -b hexo</div><div class=\"line\">Switched to a new branch <span class=\"string\">'hexo'</span></div><div class=\"line\">➜  acquaai.github.com git:(hexo) git branch -a</div><div class=\"line\">* hexo</div><div class=\"line\">  master</div><div class=\"line\">  remotes/origin/HEAD -&gt; origin/master</div><div class=\"line\">  remotes/origin/master</div><div class=\"line\">  </div><div class=\"line\">  ➜  acquaai.github.com git:(hexo) git add .</div><div class=\"line\">➜  acquaai.github.com git:(hexo) git commit -m <span class=\"string\">\"hexo first commit\"</span></div><div class=\"line\">On branch hexo</div><div class=\"line\">nothing to commit, working tree clean</div><div class=\"line\">➜  acquaai.github.com git:(hexo) git push origin hexo</div><div class=\"line\">Total 0 (delta 0), reused 0 (delta 0)</div><div class=\"line\">To https://github.com/acquaai/acquaai.github.com.git</div><div class=\"line\"> * [new branch]      hexo -&gt; hexo</div></pre></td></tr></table></figure>\n<h2 id=\"设置默认分支hexo\"><a href=\"#设置默认分支hexo\" class=\"headerlink\" title=\"设置默认分支hexo\"></a>设置默认分支hexo</h2><h2 id=\"安装nvm\"><a href=\"#安装nvm\" class=\"headerlink\" title=\"安装nvm\"></a>安装nvm</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">➜  ~ curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.36.6/install.sh | bash</div><div class=\"line\">or</div><div class=\"line\">➜  ~ wget -qO- https://raw.githubusercontent.com/creationix/nvm/v0.33.6/install.sh | bash</div></pre></td></tr></table></figure>\n<h3 id=\"配置环境变量\"><a href=\"#配置环境变量\" class=\"headerlink\" title=\"配置环境变量\"></a>配置环境变量</h3><p>nvm默认安装在~/.nvm，自动在shell配置文件（oh-my-zsh -&gt; ~/.zshrc）尾增加如下内容：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">➜  ~ cat .zshrc</div><div class=\"line\">...</div><div class=\"line\"><span class=\"built_in\">export</span> NVM_DIR=<span class=\"string\">\"<span class=\"variable\">$HOME</span>/.nvm\"</span></div><div class=\"line\">[ -s <span class=\"string\">\"<span class=\"variable\">$NVM_DIR</span>/nvm.sh\"</span> ] &amp;&amp; \\. <span class=\"string\">\"<span class=\"variable\">$NVM_DIR</span>/nvm.sh\"</span>  <span class=\"comment\"># This loads nvm</span></div><div class=\"line\">[ -s <span class=\"string\">\"<span class=\"variable\">$NVM_DIR</span>/bash_completion\"</span> ] &amp;&amp; \\. <span class=\"string\">\"<span class=\"variable\">$NVM_DIR</span>/bash_completion\"</span>  <span class=\"comment\"># This loads nvm bash_completion</span></div></pre></td></tr></table></figure></p>","more":"<h3 id=\"查看nvm信息\"><a href=\"#查看nvm信息\" class=\"headerlink\" title=\"查看nvm信息\"></a>查看nvm信息</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">➜  ~ <span class=\"built_in\">source</span> ~/.zshrc</div><div class=\"line\">➜  ~ nvm --version</div></pre></td></tr></table></figure>\n<h2 id=\"安装Node\"><a href=\"#安装Node\" class=\"headerlink\" title=\"安装Node\"></a>安装Node</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">➜  ~ nvm ls-remote         <span class=\"comment\">#查看Node的版本信息</span></div><div class=\"line\">➜  ~ nvm install v6.11.4</div></pre></td></tr></table></figure>\n<p>如果身在墙内，可以使用国内镜像资源<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">➜  ~ NVM_NODEJS_ORG_MIRROR=https://npm.taobao.org/mirrors/node nvm install 6</div></pre></td></tr></table></figure></p>\n<h2 id=\"安装hexo\"><a href=\"#安装hexo\" class=\"headerlink\" title=\"安装hexo\"></a>安装hexo</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">➜  ~ <span class=\"built_in\">cd</span> acquaai.github.com</div><div class=\"line\">➜  acquaai.github.com sudo npm install hexo-cli -g</div></pre></td></tr></table></figure>\n<h3 id=\"部署网站\"><a href=\"#部署网站\" class=\"headerlink\" title=\"部署网站\"></a>部署网站</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">➜  acquaai.github.com hexo init  <span class=\"comment\">#初始化时要求目录为空，init完成后再CP回来</span></div><div class=\"line\">➜  acquaai.github.com npm install</div></pre></td></tr></table></figure>\n<h3 id=\"生成静态页面\"><a href=\"#生成静态页面\" class=\"headerlink\" title=\"生成静态页面\"></a>生成静态页面</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">➜  acquaai.github.com hexo clean</div><div class=\"line\">➜  acquaai.github.com hexo g\t<span class=\"comment\">#generate</span></div></pre></td></tr></table></figure>\n<h3 id=\"运行hexo\"><a href=\"#运行hexo\" class=\"headerlink\" title=\"运行hexo\"></a>运行hexo</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">➜  acquaai.github.com hexo s\t<span class=\"comment\">#server</span></div><div class=\"line\">localhost:4000\t<span class=\"comment\">#在浏览器中查看效果</span></div></pre></td></tr></table></figure>\n<h2 id=\"安装发布插件\"><a href=\"#安装发布插件\" class=\"headerlink\" title=\"安装发布插件\"></a>安装发布插件</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">➜  acquaai.github.com git:(hexo) npm install hexo-deployer-git --save</div></pre></td></tr></table></figure>\n<h3 id=\"网站发布\"><a href=\"#网站发布\" class=\"headerlink\" title=\"网站发布\"></a>网站发布</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">➜  acquaai.github.com git:(hexo) ✗ vi _config.yml</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Deployment</span></div><div class=\"line\"><span class=\"comment\">## Docs: https://hexo.io/docs/deployment.html</span></div><div class=\"line\">deploy:</div><div class=\"line\">  <span class=\"built_in\">type</span>: git</div><div class=\"line\">  repo: https://github.com/acquaai/acquaai.github.com</div><div class=\"line\">  branch: [master]</div><div class=\"line\"></div><div class=\"line\">➜  acquaai.github.com hexo d\t<span class=\"comment\">#deploy</span></div></pre></td></tr></table></figure>\n<h2 id=\"安装主题\"><a href=\"#安装主题\" class=\"headerlink\" title=\"安装主题\"></a>安装主题</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">➜  acquaai.github.com git:(hexo) ✗ npm install hexo-renderer-scss --save    <span class=\"comment\">#安装主题插件</span></div><div class=\"line\">➜  acquaai.github.com git:(hexo) ✗ git <span class=\"built_in\">clone</span> https://github.com/ahonn/hexo-theme-even themes/even</div><div class=\"line\">➜  acquaai.github.com git:(hexo) ✗ vi _config.yml\t<span class=\"comment\">#修改网站配置文件theme</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># Extensions</span></div><div class=\"line\"><span class=\"comment\">## Plugins: https://hexo.io/plugins/</span></div><div class=\"line\"><span class=\"comment\">## Themes: https://hexo.io/themes/</span></div><div class=\"line\">theme: even</div></pre></td></tr></table></figure>\n<p>如果需要配置RSS，安装插件：<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">➜  acquaai.github.com git:(hexo) ✗ npm install hexo-generator-feed --save</div><div class=\"line\">注意：此插件使用命令python2，推荐定义别名<span class=\"built_in\">alias</span> python2=<span class=\"string\">\"python\"</span></div></pre></td></tr></table></figure></p>"},{"title":"ntpd vs ntpdate","date":"2017-10-28T10:40:48.000Z","comments":0,"_content":">10月16日[PingCAP](https://pingcap.com)正式发布了TiDB 1.0版本，作为数据库的爱好者第一时间感受一下。在部署8节点的TiDB时，TiDB会precheck所有节点的时钟同步，而precheck的方式是**only ntpd**，由于OS来源于克隆模板，模板中采用了crontab的ntpdate & hwclock -w方式来同步时间，so the question is coming, which one and why?\n\nThe ntpd program is an operating system daemon which sets and maintains the system time of day in synchronism with Internet standard time servers. NTP provides a `smooth` time correction.\n\nntpdate does not keep any state to perform this service for you so will not provide the same kind of accuracy. ntpdate corrects the system time `instantaneously`, which can cause problems with some software (**Especially similar to database transactions, the time can't jump back**). ntpdate can be run manually as necessary to set the host clock, or it can be run from the host startup script to set the clock at boot time. It is also possible to run ntpdate from a cron script. \n\nNTP daemon uses sophisticated algorithms to maximize accuracy and reliability while minimizing resource use. Finally, since ntpdate does not discipline the host clock frequency as does ntpd, the accuracy using ntpdate is limited.\n\n<!-- more -->\n\n>ntpd是系统同步时间的守护进程，依据偏移量来线性的调整时间，拥有更高的精度和安全性；而ntpdate简单、粗暴跳变式的立即更新时间，这在事务型的数据库应用中是致命的，上一秒你还是亿万富翁，一下秒也许你就变成了穷光蛋。\n\n## 配置NTP Server\n### 安装NTP包\n``` bash\n$ sudo yum update\n$ sudo yum install -y ntp\n```\n### 修改系统时区\n``` bash\n$ sudo timedatectl list-timezones |grep Asia/Shanghai\nAsia/Shanghai\n$ sudo timedatectl set-timezone Asia/Shanghai\n$ sudo timedatectl \n      Local time: Sat 2017-10-28 11:39:25 CST\n  Universal time: Sat 2017-10-28 03:39:25 UTC\n        RTC time: Sat 2017-10-28 03:39:25\n       Time zone: Asia/Shanghai (CST, +0800)\n     NTP enabled: no\nNTP synchronized: no\n RTC in local TZ: no\n     DST active: n/a\n```\n``` bash\nCentOS 7之前版本（可能需要tzdata包）：\n$ sudo vi /etc/sysconfig/clock \nZONE=\"Asia/Shanghai\"\n$ sudo cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime\n```\n``` bash\n修改/etc/ntp.conf\n国内阿里有原子时钟，可以使用阿里公布的时钟源\n$ sudo vi /etc/ntp.conf\ndriftfile /var/lib/ntp/drift  #以driftfile记录时间差异，百万分之一秒（ppm）\nrestrict default kod nomodify notrap nopeer noquery\t#拒绝IPv4的连接\nrestrict -6 default kod nomodify notrap nopeer noquery\t##拒绝IPv6的连接\n\nnomodify: 客户端不能使用ntpc与ntpq来修改服务器的时间参数，但客户端仍可以校时\nnotrap: 不提供trap远程事件登录（remote event logging）的功能\nnoquery: 客户端不能够使用ntpq、ntpc等指令来查询时间服务器，客户端不可以校时\nignore: 拒绝所有类型的NTP连接\nnotrust: 拒绝没有认证的客户端\n\nrestrict 127.0.0.1\t#允许本机来源\nrestrict -6 ::1\nrestrict 192.168.1.0 mask 255.255.255.0 nomodify   #允许的网段\n\nserver  time1.aliyun.com\nserver  time2.aliyun.com\nserver  time3.aliyun.com\nserver  time4.aliyun.com\nserver  time5.aliyun.com\nserver  time6.aliyun.com  prefer\nserver  time7.aliyun.com\n\nincludefile /etc/ntp/crypto/pw\nkeys /etc/ntp/keys\n```\n### 启动NTP并检查\n``` bash\n$ sudo systemctl start ntpd\n$ ntpstat\n**synchronised** to NTP server (115.28.122.198) at stratum 3 \n   time correct to within 75 ms\n   polling server every 1024 s\n\n$ ntpq -p\n     remote           refid      st t when poll reach   delay   offset  jitter\n==============================================================================\n*time6.aliyun.co 10.137.38.86     2 u  383 1024  377   24.056   -0.829   0.594\n+time4.aliyun.co 10.137.38.86     2 u  721 1024  377   20.286   -0.590   0.809\n-time5.aliyun.co 10.137.38.86     2 u  229 1024  373   34.518   -4.825   2.597\n+120.25.115.19   10.137.38.86     2 u  678 1024  337   18.701   -0.811   1.965\n\n$ sudo systemctl enable ntpd\n```\n\n## 配置NTP Client\n### 安装NTP包\n### 修改系统时区\n### 修改/etc/ntp.conf\n``` bash\n$ sudo vi /etc/ntp.conf\nrestrict 127.0.0.1\nserver 192.168.1.118\n\n$ sudo systemctl start ntpd\n$ sudo ntpdate 192.168.1.118\t#由于client/server之间的误差不允许超过 1000 秒，可能需要先手动同步\n$ ntpstat \nsynchronised to NTP server (192.168.1.118) at stratum 4 \n   time correct to within 79 ms\n   polling server every 64 s\n$ sudo systemctl enable ntpd\n```\n","source":"_posts/ntpd-vs-ntpdate.md","raw":"---\ntitle: ntpd vs ntpdate\ndate: 2017-10-28 18:40:48\ncategories: DevOps\ncomments: false\n---\n>10月16日[PingCAP](https://pingcap.com)正式发布了TiDB 1.0版本，作为数据库的爱好者第一时间感受一下。在部署8节点的TiDB时，TiDB会precheck所有节点的时钟同步，而precheck的方式是**only ntpd**，由于OS来源于克隆模板，模板中采用了crontab的ntpdate & hwclock -w方式来同步时间，so the question is coming, which one and why?\n\nThe ntpd program is an operating system daemon which sets and maintains the system time of day in synchronism with Internet standard time servers. NTP provides a `smooth` time correction.\n\nntpdate does not keep any state to perform this service for you so will not provide the same kind of accuracy. ntpdate corrects the system time `instantaneously`, which can cause problems with some software (**Especially similar to database transactions, the time can't jump back**). ntpdate can be run manually as necessary to set the host clock, or it can be run from the host startup script to set the clock at boot time. It is also possible to run ntpdate from a cron script. \n\nNTP daemon uses sophisticated algorithms to maximize accuracy and reliability while minimizing resource use. Finally, since ntpdate does not discipline the host clock frequency as does ntpd, the accuracy using ntpdate is limited.\n\n<!-- more -->\n\n>ntpd是系统同步时间的守护进程，依据偏移量来线性的调整时间，拥有更高的精度和安全性；而ntpdate简单、粗暴跳变式的立即更新时间，这在事务型的数据库应用中是致命的，上一秒你还是亿万富翁，一下秒也许你就变成了穷光蛋。\n\n## 配置NTP Server\n### 安装NTP包\n``` bash\n$ sudo yum update\n$ sudo yum install -y ntp\n```\n### 修改系统时区\n``` bash\n$ sudo timedatectl list-timezones |grep Asia/Shanghai\nAsia/Shanghai\n$ sudo timedatectl set-timezone Asia/Shanghai\n$ sudo timedatectl \n      Local time: Sat 2017-10-28 11:39:25 CST\n  Universal time: Sat 2017-10-28 03:39:25 UTC\n        RTC time: Sat 2017-10-28 03:39:25\n       Time zone: Asia/Shanghai (CST, +0800)\n     NTP enabled: no\nNTP synchronized: no\n RTC in local TZ: no\n     DST active: n/a\n```\n``` bash\nCentOS 7之前版本（可能需要tzdata包）：\n$ sudo vi /etc/sysconfig/clock \nZONE=\"Asia/Shanghai\"\n$ sudo cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime\n```\n``` bash\n修改/etc/ntp.conf\n国内阿里有原子时钟，可以使用阿里公布的时钟源\n$ sudo vi /etc/ntp.conf\ndriftfile /var/lib/ntp/drift  #以driftfile记录时间差异，百万分之一秒（ppm）\nrestrict default kod nomodify notrap nopeer noquery\t#拒绝IPv4的连接\nrestrict -6 default kod nomodify notrap nopeer noquery\t##拒绝IPv6的连接\n\nnomodify: 客户端不能使用ntpc与ntpq来修改服务器的时间参数，但客户端仍可以校时\nnotrap: 不提供trap远程事件登录（remote event logging）的功能\nnoquery: 客户端不能够使用ntpq、ntpc等指令来查询时间服务器，客户端不可以校时\nignore: 拒绝所有类型的NTP连接\nnotrust: 拒绝没有认证的客户端\n\nrestrict 127.0.0.1\t#允许本机来源\nrestrict -6 ::1\nrestrict 192.168.1.0 mask 255.255.255.0 nomodify   #允许的网段\n\nserver  time1.aliyun.com\nserver  time2.aliyun.com\nserver  time3.aliyun.com\nserver  time4.aliyun.com\nserver  time5.aliyun.com\nserver  time6.aliyun.com  prefer\nserver  time7.aliyun.com\n\nincludefile /etc/ntp/crypto/pw\nkeys /etc/ntp/keys\n```\n### 启动NTP并检查\n``` bash\n$ sudo systemctl start ntpd\n$ ntpstat\n**synchronised** to NTP server (115.28.122.198) at stratum 3 \n   time correct to within 75 ms\n   polling server every 1024 s\n\n$ ntpq -p\n     remote           refid      st t when poll reach   delay   offset  jitter\n==============================================================================\n*time6.aliyun.co 10.137.38.86     2 u  383 1024  377   24.056   -0.829   0.594\n+time4.aliyun.co 10.137.38.86     2 u  721 1024  377   20.286   -0.590   0.809\n-time5.aliyun.co 10.137.38.86     2 u  229 1024  373   34.518   -4.825   2.597\n+120.25.115.19   10.137.38.86     2 u  678 1024  337   18.701   -0.811   1.965\n\n$ sudo systemctl enable ntpd\n```\n\n## 配置NTP Client\n### 安装NTP包\n### 修改系统时区\n### 修改/etc/ntp.conf\n``` bash\n$ sudo vi /etc/ntp.conf\nrestrict 127.0.0.1\nserver 192.168.1.118\n\n$ sudo systemctl start ntpd\n$ sudo ntpdate 192.168.1.118\t#由于client/server之间的误差不允许超过 1000 秒，可能需要先手动同步\n$ ntpstat \nsynchronised to NTP server (192.168.1.118) at stratum 4 \n   time correct to within 79 ms\n   polling server every 64 s\n$ sudo systemctl enable ntpd\n```\n","slug":"ntpd-vs-ntpdate","published":1,"updated":"2017-10-28T14:17:32.715Z","layout":"post","photos":[],"link":"","_id":"cj9fnqwcl000696skck90dhe6","content":"<blockquote>\n<p>10月16日<a href=\"https://pingcap.com\" target=\"_blank\" rel=\"external\">PingCAP</a>正式发布了TiDB 1.0版本，作为数据库的爱好者第一时间感受一下。在部署8节点的TiDB时，TiDB会precheck所有节点的时钟同步，而precheck的方式是<strong>only ntpd</strong>，由于OS来源于克隆模板，模板中采用了crontab的ntpdate &amp; hwclock -w方式来同步时间，so the question is coming, which one and why?</p>\n</blockquote>\n<p>The ntpd program is an operating system daemon which sets and maintains the system time of day in synchronism with Internet standard time servers. NTP provides a <code>smooth</code> time correction.</p>\n<p>ntpdate does not keep any state to perform this service for you so will not provide the same kind of accuracy. ntpdate corrects the system time <code>instantaneously</code>, which can cause problems with some software (<strong>Especially similar to database transactions, the time can’t jump back</strong>). ntpdate can be run manually as necessary to set the host clock, or it can be run from the host startup script to set the clock at boot time. It is also possible to run ntpdate from a cron script. </p>\n<p>NTP daemon uses sophisticated algorithms to maximize accuracy and reliability while minimizing resource use. Finally, since ntpdate does not discipline the host clock frequency as does ntpd, the accuracy using ntpdate is limited.</p>\n<a id=\"more\"></a>\n<blockquote>\n<p>ntpd是系统同步时间的守护进程，依据偏移量来线性的调整时间，拥有更高的精度和安全性；而ntpdate简单、粗暴跳变式的立即更新时间，这在事务型的数据库应用中是致命的，上一秒你还是亿万富翁，一下秒也许你就变成了穷光蛋。</p>\n</blockquote>\n<h2 id=\"配置NTP-Server\"><a href=\"#配置NTP-Server\" class=\"headerlink\" title=\"配置NTP Server\"></a>配置NTP Server</h2><h3 id=\"安装NTP包\"><a href=\"#安装NTP包\" class=\"headerlink\" title=\"安装NTP包\"></a>安装NTP包</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ sudo yum update</div><div class=\"line\">$ sudo yum install -y ntp</div></pre></td></tr></table></figure>\n<h3 id=\"修改系统时区\"><a href=\"#修改系统时区\" class=\"headerlink\" title=\"修改系统时区\"></a>修改系统时区</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ sudo timedatectl list-timezones |grep Asia/Shanghai</div><div class=\"line\">Asia/Shanghai</div><div class=\"line\">$ sudo timedatectl <span class=\"built_in\">set</span>-timezone Asia/Shanghai</div><div class=\"line\">$ sudo timedatectl </div><div class=\"line\">      Local time: Sat 2017-10-28 11:39:25 CST</div><div class=\"line\">  Universal time: Sat 2017-10-28 03:39:25 UTC</div><div class=\"line\">        RTC time: Sat 2017-10-28 03:39:25</div><div class=\"line\">       Time zone: Asia/Shanghai (CST, +0800)</div><div class=\"line\">     NTP enabled: no</div><div class=\"line\">NTP synchronized: no</div><div class=\"line\"> RTC <span class=\"keyword\">in</span> <span class=\"built_in\">local</span> TZ: no</div><div class=\"line\">     DST active: n/a</div></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">CentOS 7之前版本（可能需要tzdata包）：</div><div class=\"line\">$ sudo vi /etc/sysconfig/clock </div><div class=\"line\">ZONE=<span class=\"string\">\"Asia/Shanghai\"</span></div><div class=\"line\">$ sudo cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</div></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div></pre></td><td class=\"code\"><pre><div class=\"line\">修改/etc/ntp.conf</div><div class=\"line\">国内阿里有原子时钟，可以使用阿里公布的时钟源</div><div class=\"line\">$ sudo vi /etc/ntp.conf</div><div class=\"line\">driftfile /var/lib/ntp/drift  <span class=\"comment\">#以driftfile记录时间差异，百万分之一秒（ppm）</span></div><div class=\"line\">restrict default kod nomodify notrap nopeer noquery\t<span class=\"comment\">#拒绝IPv4的连接</span></div><div class=\"line\">restrict -6 default kod nomodify notrap nopeer noquery\t<span class=\"comment\">##拒绝IPv6的连接</span></div><div class=\"line\"></div><div class=\"line\">nomodify: 客户端不能使用ntpc与ntpq来修改服务器的时间参数，但客户端仍可以校时</div><div class=\"line\">notrap: 不提供<span class=\"built_in\">trap</span>远程事件登录（remote event logging）的功能</div><div class=\"line\">noquery: 客户端不能够使用ntpq、ntpc等指令来查询时间服务器，客户端不可以校时</div><div class=\"line\">ignore: 拒绝所有类型的NTP连接</div><div class=\"line\">notrust: 拒绝没有认证的客户端</div><div class=\"line\"></div><div class=\"line\">restrict 127.0.0.1\t<span class=\"comment\">#允许本机来源</span></div><div class=\"line\">restrict -6 ::1</div><div class=\"line\">restrict 192.168.1.0 mask 255.255.255.0 nomodify   <span class=\"comment\">#允许的网段</span></div><div class=\"line\"></div><div class=\"line\">server  time1.aliyun.com</div><div class=\"line\">server  time2.aliyun.com</div><div class=\"line\">server  time3.aliyun.com</div><div class=\"line\">server  time4.aliyun.com</div><div class=\"line\">server  time5.aliyun.com</div><div class=\"line\">server  time6.aliyun.com  prefer</div><div class=\"line\">server  time7.aliyun.com</div><div class=\"line\"></div><div class=\"line\">includefile /etc/ntp/crypto/pw</div><div class=\"line\">keys /etc/ntp/keys</div></pre></td></tr></table></figure>\n<h3 id=\"启动NTP并检查\"><a href=\"#启动NTP并检查\" class=\"headerlink\" title=\"启动NTP并检查\"></a>启动NTP并检查</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ sudo systemctl start ntpd</div><div class=\"line\">$ ntpstat</div><div class=\"line\">**synchronised** to NTP server (115.28.122.198) at stratum 3 </div><div class=\"line\">   time correct to within 75 ms</div><div class=\"line\">   polling server every 1024 s</div><div class=\"line\"></div><div class=\"line\">$ ntpq -p</div><div class=\"line\">     remote           refid      st t when poll reach   delay   offset  jitter</div><div class=\"line\">==============================================================================</div><div class=\"line\">*time6.aliyun.co 10.137.38.86     2 u  383 1024  377   24.056   -0.829   0.594</div><div class=\"line\">+time4.aliyun.co 10.137.38.86     2 u  721 1024  377   20.286   -0.590   0.809</div><div class=\"line\">-time5.aliyun.co 10.137.38.86     2 u  229 1024  373   34.518   -4.825   2.597</div><div class=\"line\">+120.25.115.19   10.137.38.86     2 u  678 1024  337   18.701   -0.811   1.965</div><div class=\"line\"></div><div class=\"line\">$ sudo systemctl <span class=\"built_in\">enable</span> ntpd</div></pre></td></tr></table></figure>\n<h2 id=\"配置NTP-Client\"><a href=\"#配置NTP-Client\" class=\"headerlink\" title=\"配置NTP Client\"></a>配置NTP Client</h2><h3 id=\"安装NTP包-1\"><a href=\"#安装NTP包-1\" class=\"headerlink\" title=\"安装NTP包\"></a>安装NTP包</h3><h3 id=\"修改系统时区-1\"><a href=\"#修改系统时区-1\" class=\"headerlink\" title=\"修改系统时区\"></a>修改系统时区</h3><h3 id=\"修改-etc-ntp-conf\"><a href=\"#修改-etc-ntp-conf\" class=\"headerlink\" title=\"修改/etc/ntp.conf\"></a>修改/etc/ntp.conf</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ sudo vi /etc/ntp.conf</div><div class=\"line\">restrict 127.0.0.1</div><div class=\"line\">server 192.168.1.118</div><div class=\"line\"></div><div class=\"line\">$ sudo systemctl start ntpd</div><div class=\"line\">$ sudo ntpdate 192.168.1.118\t<span class=\"comment\">#由于client/server之间的误差不允许超过 1000 秒，可能需要先手动同步</span></div><div class=\"line\">$ ntpstat </div><div class=\"line\">synchronised to NTP server (192.168.1.118) at stratum 4 </div><div class=\"line\">   time correct to within 79 ms</div><div class=\"line\">   polling server every 64 s</div><div class=\"line\">$ sudo systemctl <span class=\"built_in\">enable</span> ntpd</div></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<blockquote>\n<p>10月16日<a href=\"https://pingcap.com\" target=\"_blank\" rel=\"external\">PingCAP</a>正式发布了TiDB 1.0版本，作为数据库的爱好者第一时间感受一下。在部署8节点的TiDB时，TiDB会precheck所有节点的时钟同步，而precheck的方式是<strong>only ntpd</strong>，由于OS来源于克隆模板，模板中采用了crontab的ntpdate &amp; hwclock -w方式来同步时间，so the question is coming, which one and why?</p>\n</blockquote>\n<p>The ntpd program is an operating system daemon which sets and maintains the system time of day in synchronism with Internet standard time servers. NTP provides a <code>smooth</code> time correction.</p>\n<p>ntpdate does not keep any state to perform this service for you so will not provide the same kind of accuracy. ntpdate corrects the system time <code>instantaneously</code>, which can cause problems with some software (<strong>Especially similar to database transactions, the time can’t jump back</strong>). ntpdate can be run manually as necessary to set the host clock, or it can be run from the host startup script to set the clock at boot time. It is also possible to run ntpdate from a cron script. </p>\n<p>NTP daemon uses sophisticated algorithms to maximize accuracy and reliability while minimizing resource use. Finally, since ntpdate does not discipline the host clock frequency as does ntpd, the accuracy using ntpdate is limited.</p>","more":"<blockquote>\n<p>ntpd是系统同步时间的守护进程，依据偏移量来线性的调整时间，拥有更高的精度和安全性；而ntpdate简单、粗暴跳变式的立即更新时间，这在事务型的数据库应用中是致命的，上一秒你还是亿万富翁，一下秒也许你就变成了穷光蛋。</p>\n</blockquote>\n<h2 id=\"配置NTP-Server\"><a href=\"#配置NTP-Server\" class=\"headerlink\" title=\"配置NTP Server\"></a>配置NTP Server</h2><h3 id=\"安装NTP包\"><a href=\"#安装NTP包\" class=\"headerlink\" title=\"安装NTP包\"></a>安装NTP包</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ sudo yum update</div><div class=\"line\">$ sudo yum install -y ntp</div></pre></td></tr></table></figure>\n<h3 id=\"修改系统时区\"><a href=\"#修改系统时区\" class=\"headerlink\" title=\"修改系统时区\"></a>修改系统时区</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ sudo timedatectl list-timezones |grep Asia/Shanghai</div><div class=\"line\">Asia/Shanghai</div><div class=\"line\">$ sudo timedatectl <span class=\"built_in\">set</span>-timezone Asia/Shanghai</div><div class=\"line\">$ sudo timedatectl </div><div class=\"line\">      Local time: Sat 2017-10-28 11:39:25 CST</div><div class=\"line\">  Universal time: Sat 2017-10-28 03:39:25 UTC</div><div class=\"line\">        RTC time: Sat 2017-10-28 03:39:25</div><div class=\"line\">       Time zone: Asia/Shanghai (CST, +0800)</div><div class=\"line\">     NTP enabled: no</div><div class=\"line\">NTP synchronized: no</div><div class=\"line\"> RTC <span class=\"keyword\">in</span> <span class=\"built_in\">local</span> TZ: no</div><div class=\"line\">     DST active: n/a</div></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">CentOS 7之前版本（可能需要tzdata包）：</div><div class=\"line\">$ sudo vi /etc/sysconfig/clock </div><div class=\"line\">ZONE=<span class=\"string\">\"Asia/Shanghai\"</span></div><div class=\"line\">$ sudo cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</div></pre></td></tr></table></figure>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div></pre></td><td class=\"code\"><pre><div class=\"line\">修改/etc/ntp.conf</div><div class=\"line\">国内阿里有原子时钟，可以使用阿里公布的时钟源</div><div class=\"line\">$ sudo vi /etc/ntp.conf</div><div class=\"line\">driftfile /var/lib/ntp/drift  <span class=\"comment\">#以driftfile记录时间差异，百万分之一秒（ppm）</span></div><div class=\"line\">restrict default kod nomodify notrap nopeer noquery\t<span class=\"comment\">#拒绝IPv4的连接</span></div><div class=\"line\">restrict -6 default kod nomodify notrap nopeer noquery\t<span class=\"comment\">##拒绝IPv6的连接</span></div><div class=\"line\"></div><div class=\"line\">nomodify: 客户端不能使用ntpc与ntpq来修改服务器的时间参数，但客户端仍可以校时</div><div class=\"line\">notrap: 不提供<span class=\"built_in\">trap</span>远程事件登录（remote event logging）的功能</div><div class=\"line\">noquery: 客户端不能够使用ntpq、ntpc等指令来查询时间服务器，客户端不可以校时</div><div class=\"line\">ignore: 拒绝所有类型的NTP连接</div><div class=\"line\">notrust: 拒绝没有认证的客户端</div><div class=\"line\"></div><div class=\"line\">restrict 127.0.0.1\t<span class=\"comment\">#允许本机来源</span></div><div class=\"line\">restrict -6 ::1</div><div class=\"line\">restrict 192.168.1.0 mask 255.255.255.0 nomodify   <span class=\"comment\">#允许的网段</span></div><div class=\"line\"></div><div class=\"line\">server  time1.aliyun.com</div><div class=\"line\">server  time2.aliyun.com</div><div class=\"line\">server  time3.aliyun.com</div><div class=\"line\">server  time4.aliyun.com</div><div class=\"line\">server  time5.aliyun.com</div><div class=\"line\">server  time6.aliyun.com  prefer</div><div class=\"line\">server  time7.aliyun.com</div><div class=\"line\"></div><div class=\"line\">includefile /etc/ntp/crypto/pw</div><div class=\"line\">keys /etc/ntp/keys</div></pre></td></tr></table></figure>\n<h3 id=\"启动NTP并检查\"><a href=\"#启动NTP并检查\" class=\"headerlink\" title=\"启动NTP并检查\"></a>启动NTP并检查</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ sudo systemctl start ntpd</div><div class=\"line\">$ ntpstat</div><div class=\"line\">**synchronised** to NTP server (115.28.122.198) at stratum 3 </div><div class=\"line\">   time correct to within 75 ms</div><div class=\"line\">   polling server every 1024 s</div><div class=\"line\"></div><div class=\"line\">$ ntpq -p</div><div class=\"line\">     remote           refid      st t when poll reach   delay   offset  jitter</div><div class=\"line\">==============================================================================</div><div class=\"line\">*time6.aliyun.co 10.137.38.86     2 u  383 1024  377   24.056   -0.829   0.594</div><div class=\"line\">+time4.aliyun.co 10.137.38.86     2 u  721 1024  377   20.286   -0.590   0.809</div><div class=\"line\">-time5.aliyun.co 10.137.38.86     2 u  229 1024  373   34.518   -4.825   2.597</div><div class=\"line\">+120.25.115.19   10.137.38.86     2 u  678 1024  337   18.701   -0.811   1.965</div><div class=\"line\"></div><div class=\"line\">$ sudo systemctl <span class=\"built_in\">enable</span> ntpd</div></pre></td></tr></table></figure>\n<h2 id=\"配置NTP-Client\"><a href=\"#配置NTP-Client\" class=\"headerlink\" title=\"配置NTP Client\"></a>配置NTP Client</h2><h3 id=\"安装NTP包-1\"><a href=\"#安装NTP包-1\" class=\"headerlink\" title=\"安装NTP包\"></a>安装NTP包</h3><h3 id=\"修改系统时区-1\"><a href=\"#修改系统时区-1\" class=\"headerlink\" title=\"修改系统时区\"></a>修改系统时区</h3><h3 id=\"修改-etc-ntp-conf\"><a href=\"#修改-etc-ntp-conf\" class=\"headerlink\" title=\"修改/etc/ntp.conf\"></a>修改/etc/ntp.conf</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ sudo vi /etc/ntp.conf</div><div class=\"line\">restrict 127.0.0.1</div><div class=\"line\">server 192.168.1.118</div><div class=\"line\"></div><div class=\"line\">$ sudo systemctl start ntpd</div><div class=\"line\">$ sudo ntpdate 192.168.1.118\t<span class=\"comment\">#由于client/server之间的误差不允许超过 1000 秒，可能需要先手动同步</span></div><div class=\"line\">$ ntpstat </div><div class=\"line\">synchronised to NTP server (192.168.1.118) at stratum 4 </div><div class=\"line\">   time correct to within 79 ms</div><div class=\"line\">   polling server every 64 s</div><div class=\"line\">$ sudo systemctl <span class=\"built_in\">enable</span> ntpd</div></pre></td></tr></table></figure>"}],"PostAsset":[],"PostCategory":[{"post_id":"cj9fnqwbw000096skileld217","category_id":"cj9fnqwcf000496skt57smj17","_id":"cj9fnqwcr000896sk4su0vjjy"},{"post_id":"cj9fnqwc4000296skxlt44hou","category_id":"cj9fnqwcq000796sksu7f148p","_id":"cj9fnqwcu000b96skelrbe6et"},{"post_id":"cj9fnqwci000596sk8f9skd9s","category_id":"cj9fnqwcq000796sksu7f148p","_id":"cj9fnqwcw000c96skcbca8qp8"},{"post_id":"cj9fnqwcl000696skck90dhe6","category_id":"cj9fnqwcu000a96skyqv4yn19","_id":"cj9fnqwcx000d96skq3wi8a6u"}],"PostTag":[],"Tag":[]}}